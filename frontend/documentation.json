{
    "pipes": [],
    "interfaces": [
        {
            "name": "DecodedJwtTokenData",
            "id": "interface-DecodedJwtTokenData-8d5801c715b190b6f005bbe6b87e338058a88b9ee2ecb010f354b31435443fa13a7be7bd1da844d8c3d09deba92909bdb4145f55647f8375bed29afc754271b5",
            "file": "src/app/commons/models/jwt-token.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Roles } from '../dto/role-dto.model';\n\nexport interface JwtToken {\n  token: string;\n}\n\nexport interface DecodedJwtTokenData {\n  sub: string;\n  Roles: Roles[];\n  exp: number;\n  iat: number;\n}\n",
            "properties": [
                {
                    "name": "exp",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "iat",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "Roles",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Roles[]",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "sub",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Dto",
            "id": "interface-Dto-95d820ccbaf003b43cfb80e3b1dcdbdd4ed2c43cb998c851f92cc80ed886bb0e63868cf10ef71a9f496af17255260aeb2c9d8697a9d942cd0575a942553fe9e7",
            "file": "src/app/commons/dto/dto.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Dto {}\n",
            "properties": [],
            "indexSignatures": [],
            "methods": []
        },
        {
            "name": "JwtToken",
            "id": "interface-JwtToken-8d5801c715b190b6f005bbe6b87e338058a88b9ee2ecb010f354b31435443fa13a7be7bd1da844d8c3d09deba92909bdb4145f55647f8375bed29afc754271b5",
            "file": "src/app/commons/models/jwt-token.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Roles } from '../dto/role-dto.model';\n\nexport interface JwtToken {\n  token: string;\n}\n\nexport interface DecodedJwtTokenData {\n  sub: string;\n  Roles: Roles[];\n  exp: number;\n  iat: number;\n}\n",
            "properties": [
                {
                    "name": "token",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "PayrollAddTrainingDto",
            "id": "interface-PayrollAddTrainingDto-c3d61ee89c13c2c4f5873f938efcf1f2639ec30c5e9c92ef36a04b9e29f37347d5eaf8248e01ca1b9ab301339a4ead51dc3b0ef06fcaa98d9a1319ae0541a2ba",
            "file": "src/app/commons/dto/payroll-add-training-dto.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface PayrollAddTrainingDto {\n  id: number;\n  trainingIds?: number[];\n}\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "trainingIds",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number[]",
                    "optional": true,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "PayrollDto",
            "id": "interface-PayrollDto-7ddc0a593fbd476a8b548bc14d691aa78f2a67a5e821af753b4350bad17686b0b7082682c982b4e66ee9327e801e1b9e3cca6b05dc7160c5fc030eb684d8ae9e",
            "file": "src/app/commons/dto/payroll-dto.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { TrainingDto } from 'src/app/commons/dto/training-dto.model';\nimport { UserDto } from './user-dto.model';\nimport { BillState } from '../models/bill-state.model';\nexport interface PayrollDto {\n  id?: number;\n  month: number;\n  year: number;\n  trainings: TrainingDto[];\n  user: UserDto;\n  billState: BillState;\n}\n",
            "properties": [
                {
                    "name": "billState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BillState",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "month",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "trainings",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TrainingDto[]",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "user",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UserDto",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "year",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Roles",
            "id": "interface-Roles-0144262ac51eef74b22d543bef94db24cfe156dc30edc089da8db1abd7f149b1f80fdaa9dc44f993131d30e9395695badeaac15bce01e7cd9f12476a99e37d9b",
            "file": "src/app/commons/dto/role-dto.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Roles {\n  authority: Authority[];\n}\n\nexport type Authority =\n  | 'ROLE_ADMIN'\n  | 'ROLE_TRAINER'\n  | 'ROLE_SUPERIOR'\n  | 'ROLE_FINANCE';\n",
            "properties": [
                {
                    "name": "authority",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Authority[]",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Roles",
            "id": "interface-Roles-0144262ac51eef74b22d543bef94db24cfe156dc30edc089da8db1abd7f149b1f80fdaa9dc44f993131d30e9395695badeaac15bce01e7cd9f12476a99e37d9b-1",
            "file": "src/app/commons/models/role.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Roles {\n  authority: Authority[];\n}\n\nexport type Authority =\n  | 'ROLE_ADMIN'\n  | 'ROLE_TRAINER'\n  | 'ROLE_SUPERIOR'\n  | 'ROLE_FINANCE';\n",
            "properties": [
                {
                    "name": "authority",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Authority[]",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "Roles-1"
        },
        {
            "name": "RoomDto",
            "id": "interface-RoomDto-fa80e5f934b128ab49bf67aaed3029f840d9e15bdd89ddf84ab40490d5ac018778fc4b155feaf237f33bbfc29f394aeb54bb061b5cd96648a73bc15c3763b101",
            "file": "src/app/commons/dto/room-dto.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface RoomDto {\n  id?: number;\n  name?: string;\n  image?: string;\n}\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "image",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Training",
            "id": "interface-Training-0d8ea048bd8ca9cc5faa0142700bd3e8705bc0656a417f054c1fe59d63d9e63b08dcacc233765504663de11cf8fde19e8d320e0ced2b83b5873688594fb74381",
            "file": "src/app/commons/models/training.modell.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { TrainingTyp } from './training-typ.model';\n\nexport interface Training {\n  id?: number;\n  duration?: number;\n  runningDate: Date;\n  amountOfCustomer?: number;\n  trainingTyp: TrainingTyp;\n}\n",
            "properties": [
                {
                    "name": "amountOfCustomer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "duration",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "runningDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "trainingTyp",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TrainingTyp",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "TrainingDto",
            "id": "interface-TrainingDto-723c03706ef2aeddd5e25bd848d346c180865e81414c5d62c039d704d7149009107c8560ffaf5e39535ef5229a9e2b49aa640ab51196603b8a4ad707072aa07d",
            "file": "src/app/commons/dto/training-dto.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { UserDto } from 'src/app/commons/dto/user-dto.model';\nimport { RoomDto } from './room-dto.model';\nimport { TrainingTypDto } from './training-typ-dto.model';\nexport interface TrainingDto {\n  id?: number;\n  trainingTyp?: TrainingTypDto;\n  room?: RoomDto;\n  user?: UserDto;\n  duration?: number;\n  runningDate?: Date;\n  amountOfCustomer?: number;\n}\n",
            "properties": [
                {
                    "name": "amountOfCustomer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "duration",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "room",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "RoomDto",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "runningDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "trainingTyp",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TrainingTypDto",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "user",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UserDto",
                    "optional": true,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "TrainingTyp",
            "id": "interface-TrainingTyp-ecacd36e3335d623a8f897a56a3a76ba9b66ec0a21a0b412ed1942981a92e5c5c8f01672030211351fcaaa1f146a3c0dbdbe69029cf5735d09f71a290c74360e",
            "file": "src/app/commons/models/training-typ.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface TrainingTyp {\n  id: number;\n  name: string;\n}\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "TrainingTypDto",
            "id": "interface-TrainingTypDto-5eed59ead3b7196ce3ba5814c0311d619be6a9c03ee88eef0793f9583fdf724d0df72ed190a9e13911bdeead8e482071441b70cbbee2a1e7720ca9e57a9b3cd3",
            "file": "src/app/commons/dto/training-typ-dto.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface TrainingTypDto {\n  id?: number;\n  name?: string;\n  image?: File;\n  decodedBase64Image?: string;\n}\n",
            "properties": [
                {
                    "name": "decodedBase64Image",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "image",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "File",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "User",
            "id": "interface-User-9c7e5f1bbbab702cb032307d130876cb68969b0cd4eedef32a0c8cad8081a54e5f8f577ed6ad4539c1b99a1d246cb34031d198c2ea8eba440e64e91b14f01fdc",
            "file": "src/stories/User.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {}\n",
            "properties": [],
            "indexSignatures": [],
            "methods": []
        },
        {
            "name": "User",
            "id": "interface-User-d06e0d3c981b93f9ccc7e63d266e8982843a8530c34d7e2abfa9a496c8c0717c47f7a64597c62ed10a00a1040fa751424dd4dcf75af3d139e18d4acb990e063a-1",
            "file": "src/app/commons/models/user.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Roles } from './role.model';\n\nexport interface User {\n  id?: number;\n  lastName?: string;\n  firstName?: string;\n  email?: string;\n  username?: string;\n  roles?: Roles[];\n}\n",
            "properties": [
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "firstName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "lastName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "roles",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Roles[]",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "username",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "User-1"
        },
        {
            "name": "UserDto",
            "id": "interface-UserDto-52599f5e77f8e4af7c927fb8e7f2e6fd7952e5336adb338c56a414f2550d13a4187b376936b6568c3c0d390306e8fb58f65a67b5b07dad702514be5d369e7a8a",
            "file": "src/app/commons/dto/user-dto.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Roles } from './role-dto.model';\n\nexport interface UserDto {\n  id?: number;\n  lastName?: string;\n  firstName?: string;\n  email?: string;\n  username?: string;\n  roles?: Roles[];\n}\n",
            "properties": [
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "firstName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "lastName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "roles",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Roles[]",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "username",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "UserLoginDto",
            "id": "interface-UserLoginDto-88f6676a380582fca17cbf222bd2b860a3df050a45f1b3e311bd7a7ed9338959dedd29223e3af5ef0124a1dd6e41ebbbc1e5f9351b81e9bad7fc90cc56d5be3a",
            "file": "src/app/commons/dto/userlogin-dto.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface UserLoginDto {\n  password: string;\n  username: string;\n}\n",
            "properties": [
                {
                    "name": "password",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "username",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "AuthService",
            "id": "injectable-AuthService-b82c119633ffd7c9277f76d55c2905a89cd0fe8cb7a60ff7957a3535d2d53950cdd24dc5ce15205a0fa275be5eec392d84fcf43013696e00dd90f7c59656b614",
            "file": "src/app/commons/service/auth.service.ts",
            "properties": [
                {
                    "name": "path",
                    "defaultValue": "'authenticate'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "BaseHttpService"
                    }
                },
                {
                    "name": "httpClient",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HttpClient",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "BaseHttpService"
                    }
                }
            ],
            "methods": [
                {
                    "name": "login$",
                    "args": [
                        {
                            "name": "userLoginDto",
                            "type": "UserLoginDto",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "userLoginDto",
                            "type": "UserLoginDto",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "create$",
                    "args": [
                        {
                            "name": "dto",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "dto",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseHttpService"
                    }
                },
                {
                    "name": "createBackendEndpoint",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "BaseHttpService"
                    }
                },
                {
                    "name": "createFromFormData$",
                    "args": [
                        {
                            "name": "formData",
                            "type": "FormData",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "formData",
                            "type": "FormData",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseHttpService"
                    }
                },
                {
                    "name": "getAll$",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<T[]>",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "BaseHttpService"
                    }
                },
                {
                    "name": "uploadImage$",
                    "args": [
                        {
                            "name": "file",
                            "type": "File",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "file",
                            "type": "File",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseHttpService"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { SnackbarService } from 'src/app/commons/service/snackbar.service';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable, throwError } from 'rxjs';\nimport { tap, catchError } from 'rxjs/operators';\nimport { UserLoginDto } from '../dto/userlogin-dto.model';\nimport { BaseHttpService } from './base-http.service';\nimport { LocalStoreService } from './jwt.service';\nimport { HEADER } from './service.constants';\nimport { JwtToken } from '../models/jwt-token.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService extends BaseHttpService<UserLoginDto> {\n  protected path: string = 'authenticate';\n\n  constructor(\n    httpClient: HttpClient,\n    private jwtService: LocalStoreService,\n    private router: Router,\n    private snackbar: SnackbarService\n  ) {\n    super(httpClient);\n  }\n\n  public login$(userLoginDto: UserLoginDto): Observable<any> {\n    const body = JSON.stringify(userLoginDto);\n    const headers = new HttpHeaders(HEADER);\n\n    const post$ = this.httpClient.post<JwtToken>(\n      this.createBackendEndpoint(),\n      body,\n      {\n        headers,\n      }\n    );\n\n    return post$.pipe(\n      catchError((err) => {\n        this.snackbar.info({ text: 'Einloggen fehlgeschlagen!', typ: 'error' });\n        this.jwtService.clear();\n        return throwError(err);\n      }),\n      tap((resposne) => {\n        this.jwtService.storeJwt(resposne);\n        this.snackbar.info({ text: 'Du bist eingeloggt', typ: 'info' });\n        this.router.navigateByUrl('/welcome');\n      })\n    );\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "jwtService",
                        "type": "LocalStoreService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "snackbar",
                        "type": "SnackbarService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "jwtService",
                        "type": "LocalStoreService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "snackbar",
                        "type": "SnackbarService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "BaseHttpService",
            "type": "injectable"
        },
        {
            "name": "BaseHttpService",
            "id": "injectable-BaseHttpService-2622d1c9d0878465b2f1b28e0af840d83dd3e1aa2456ce7064e80909cc3c76f6905c63c4240929a56d2b4e628ed18c5d5c95b4c930df15e610cd8c9772b1a00a",
            "file": "src/app/commons/service/base-http.service.ts",
            "properties": [
                {
                    "name": "httpClient",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HttpClient",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "path",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methods": [
                {
                    "name": "create$",
                    "args": [
                        {
                            "name": "dto",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "dto",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "createBackendEndpoint",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "createFromFormData$",
                    "args": [
                        {
                            "name": "formData",
                            "type": "FormData",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "formData",
                            "type": "FormData",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getAll$",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<T[]>",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "uploadImage$",
                    "args": [
                        {
                            "name": "file",
                            "type": "File",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "file",
                            "type": "File",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { HEADER } from './service.constants';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport abstract class BaseHttpService<T> {\n  protected path: string;\n  protected httpClient: HttpClient;\n\n  protected constructor(httpClient: HttpClient) {\n    this.httpClient = httpClient;\n  }\n\n  public create$(dto: T): Observable<any> {\n    const body = JSON.stringify(dto);\n    const headers = new HttpHeaders(HEADER);\n    return this.httpClient.post(this.createBackendEndpoint(), body, {\n      headers,\n    });\n  }\n\n  public createFromFormData$(formData: FormData): Observable<any> {\n    return this.httpClient.post(this.createBackendEndpoint(), formData);\n  }\n\n  public getAll$(): Observable<T[]> {\n    return this.httpClient.get<any>(this.createBackendEndpoint());\n  }\n\n  protected createBackendEndpoint(): string {\n    return `${environment.BACKEND_URL}${this.path}`;\n  }\n\n  uploadImage$(file: File): Observable<any> {\n    const formData = new FormData();\n    formData.append('file', file, file.name);\n    formData.append('id', '1');\n    return this.httpClient.post(\n      this.createBackendEndpoint() + '/image',\n      formData\n    );\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "modifierKind": [
                    122
                ],
                "jsdoctags": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "CardItemService",
            "id": "injectable-CardItemService-945566febaba78d9ee747a5fd288cd66dfef0c78e88686fc887aa83c2e4dc6e3c2efcd138c76eb7c6eb6da696f06a328d051d1b1268d68ff7b68b35c5d4b9575",
            "file": "src/app/trainer/payroll/payroll-overview/card-item.service.ts",
            "properties": [
                {
                    "name": "clickedElements",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TrainingDto[]",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "trainings",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TrainingDto[]",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "addItem",
                    "args": [
                        {
                            "name": "training",
                            "type": "TrainingDto",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "training",
                            "type": "TrainingDto",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "clear",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "removeItem",
                    "args": [
                        {
                            "name": "training",
                            "type": "TrainingDto",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "training",
                            "type": "TrainingDto",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { TrainingDto } from '../../../commons/dto/training-dto.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CardItemService {\n  public trainings: TrainingDto[];\n  public clickedElements: TrainingDto[] = [];\n\n  public addItem(training: TrainingDto): void {\n    this.clickedElements.push(training);\n  }\n\n  public removeItem(training: TrainingDto): void {\n    this.clickedElements.forEach((element2remove, index) => {\n      if (element2remove.id == training.id) {\n        this.clickedElements.splice(index, 1);\n      }\n    });\n  }\n\n  public clear(): void {\n    this.clickedElements = [];\n    this.trainings = [];\n  }\n}\n",
            "type": "injectable"
        },
        {
            "name": "LoaderService",
            "id": "injectable-LoaderService-17ca9f2ed5accf60a9434253ece246d0fb45a3f548bba8cfff9d498d8cfc466671c9dae30b9a972cdda00688b0f42c774d5f4143e1bf5a214c6e5e89763402cf",
            "file": "src/app/commons/service/loader.service.ts",
            "properties": [
                {
                    "name": "isLoading",
                    "defaultValue": "new BehaviorSubject<boolean>(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "methods": [
                {
                    "name": "hide",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "show",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 9,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoaderService {\n  isLoading = new BehaviorSubject<boolean>(false);\n  show() {\n    this.isLoading.next(true);\n  }\n  hide() {\n    this.isLoading.next(false);\n  }\n\n  constructor() {}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 14
            },
            "type": "injectable"
        },
        {
            "name": "LocalStoreService",
            "id": "injectable-LocalStoreService-35e8a9c3828debb8686756ad2cebe19ddd7b50348409988477e63145fb69c097c19bc05fff30d98acc55d1ad8ee4ae7c0d15ddcfa8b10a8ff001b00e7a9d388a",
            "file": "src/app/commons/service/jwt.service.ts",
            "properties": [
                {
                    "name": "user$",
                    "defaultValue": "new Subject<UserDto>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "clear",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "getJwt",
                    "args": [],
                    "optional": false,
                    "returnType": "JwtToken",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "getUser",
                    "args": [],
                    "optional": false,
                    "returnType": "User",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "hasAtLeastOneRole",
                    "args": [
                        {
                            "name": "roles",
                            "type": "Roles",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "roles",
                            "type": "Roles",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "storeJwt",
                    "args": [
                        {
                            "name": "jwt",
                            "type": "JwtToken",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "jwt",
                            "type": "JwtToken",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { UserDto } from 'src/app/commons/dto/user-dto.model';\nimport { Injectable } from '@angular/core';\nimport jwt_decode from 'jwt-decode';\nimport { Subject } from 'rxjs';\nimport { JwtToken, DecodedJwtTokenData } from '../models/jwt-token.model';\nimport { User } from '../models/user.model';\nimport { Roles } from '../models/role.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LocalStoreService {\n  public user$ = new Subject<UserDto>();\n\n  public storeJwt(jwt: JwtToken): void {\n    localStorage.setItem('token', jwt.token);\n    this.user$.next(this.getUser());\n  }\n\n  public getJwt(): JwtToken {\n    let jwtToken: JwtToken;\n    let obj = localStorage!.getItem('token');\n    if (obj == null) {\n      this.user$.next(undefined);\n      return {\n        token: '',\n      };\n    }\n\n    jwtToken = {\n      token: obj,\n    };\n\n    return jwtToken;\n  }\n\n  public clear(): void {\n    localStorage.clear();\n    this.user$.next(undefined);\n  }\n\n  public hasAtLeastOneRole(roles: Roles): boolean {\n    if (roles === undefined) {\n      return false;\n    }\n    if (this.getUser()?.roles === undefined) {\n      return false;\n    }\n\n    if (\n      roles?.authority.some((x) =>\n        this.getUser()!.roles!.pop()!.authority!.includes(x)\n      )\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  public getUser(): User {\n    let decodedToken: DecodedJwtTokenData = jwt_decode(this.getJwt().token);\n    return {\n      email: decodedToken.sub,\n      roles: decodedToken.Roles,\n    };\n  }\n}\n",
            "type": "injectable"
        },
        {
            "name": "PayrollService",
            "id": "injectable-PayrollService-dd2f5555921e70d504251c7c8c591d43728868f0e5821b19afd2758eb1840714db756671064350eb67a247ef3ca7bf016f8d1867f56abf1639affd725df1baf2",
            "file": "src/app/commons/service/payroll.service.ts",
            "properties": [
                {
                    "name": "path",
                    "defaultValue": "'payroll'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "BaseHttpService"
                    }
                },
                {
                    "name": "httpClient",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HttpClient",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "BaseHttpService"
                    }
                }
            ],
            "methods": [
                {
                    "name": "addTrainings$",
                    "args": [
                        {
                            "name": "payroll",
                            "type": "PayrollAddTrainingDto",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "payroll",
                            "type": "PayrollAddTrainingDto",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "submitPayroll$",
                    "args": [
                        {
                            "name": "payroll",
                            "type": "PayrollDto",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "payroll",
                            "type": "PayrollDto",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "create$",
                    "args": [
                        {
                            "name": "dto",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "dto",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseHttpService"
                    }
                },
                {
                    "name": "createBackendEndpoint",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "BaseHttpService"
                    }
                },
                {
                    "name": "createFromFormData$",
                    "args": [
                        {
                            "name": "formData",
                            "type": "FormData",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "formData",
                            "type": "FormData",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseHttpService"
                    }
                },
                {
                    "name": "getAll$",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<T[]>",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "BaseHttpService"
                    }
                },
                {
                    "name": "uploadImage$",
                    "args": [
                        {
                            "name": "file",
                            "type": "File",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "file",
                            "type": "File",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseHttpService"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { PayrollAddTrainingDto } from '../dto/payroll-add-training-dto';\nimport { PayrollDto } from '../dto/payroll-dto.model';\nimport { BaseHttpService } from './base-http.service';\nimport { HEADER } from './service.constants';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PayrollService extends BaseHttpService<PayrollDto> {\n  protected path: string = 'payroll';\n\n  constructor(httpClient: HttpClient) {\n    super(httpClient);\n  }\n\n  public addTrainings$(payroll: PayrollAddTrainingDto): Observable<any> {\n    const body = JSON.stringify(payroll);\n    const headers = new HttpHeaders(HEADER);\n    return this.httpClient.put(this.createBackendEndpoint(), body, {\n      headers,\n    });\n  }\n\n  public submitPayroll$(payroll: PayrollDto): Observable<any> {\n    const body = JSON.stringify(payroll);\n    const headers = new HttpHeaders(HEADER);\n    return this.httpClient.put(\n      this.createBackendEndpoint() + '/submit/' + payroll.id,\n      body,\n      {\n        headers,\n      }\n    );\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "BaseHttpService",
            "type": "injectable"
        },
        {
            "name": "RoomService",
            "id": "injectable-RoomService-49e568ab143789e1addba9e5fd39ebcc2c75de04ade2cf124b2b48d2bd3c9ae58d62cfe0c2db703d3ec0909bb7af2a6d6c5993d472a330809b80779cf665bca4",
            "file": "src/app/commons/service/room.service.ts",
            "properties": [
                {
                    "name": "path",
                    "defaultValue": "'room'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "BaseHttpService"
                    }
                },
                {
                    "name": "httpClient",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HttpClient",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "BaseHttpService"
                    }
                }
            ],
            "methods": [
                {
                    "name": "create$",
                    "args": [
                        {
                            "name": "dto",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "dto",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseHttpService"
                    }
                },
                {
                    "name": "createBackendEndpoint",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "BaseHttpService"
                    }
                },
                {
                    "name": "createFromFormData$",
                    "args": [
                        {
                            "name": "formData",
                            "type": "FormData",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "formData",
                            "type": "FormData",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseHttpService"
                    }
                },
                {
                    "name": "getAll$",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<T[]>",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "BaseHttpService"
                    }
                },
                {
                    "name": "uploadImage$",
                    "args": [
                        {
                            "name": "file",
                            "type": "File",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "file",
                            "type": "File",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseHttpService"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { RoomDto } from 'src/app/commons/dto/room-dto.model';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BaseHttpService } from './base-http.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RoomService extends BaseHttpService<RoomDto> {\n  protected path: string = 'room';\n\n  constructor(httpClient: HttpClient) {\n    super(httpClient);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "BaseHttpService",
            "type": "injectable"
        },
        {
            "name": "SnackbarService",
            "id": "injectable-SnackbarService-c0ac37e60fde553b3498e01e5a3b221454b9a764f97bab32421a14f6ed1844926ed59db8b761a87dcf0a46b603bfd2f08550635eb2c06f22ee051ec8057039e1",
            "file": "src/app/commons/service/snackbar.service.ts",
            "properties": [
                {
                    "name": "infoSubject",
                    "defaultValue": "new BehaviorSubject<Message | undefined>(undefined)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methods": [
                {
                    "name": "delay",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "info",
                    "args": [
                        {
                            "name": "msg",
                            "type": "Message",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "msg",
                            "type": "Message",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "sendDataSaveOk",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "sendStandardNok",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { BehaviorSubject } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { Message } from '../models/messagebox.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SnackbarService {\n  infoSubject = new BehaviorSubject<Message | undefined>(undefined);\n\n  public info(msg: Message): void {\n    this.infoSubject.next(msg);\n    this.delay();\n  }\n\n  public sendDataSaveOk(): void {\n    this.info({\n      text: 'Die Daten wurden gespeichert',\n      typ: 'info',\n    });\n  }\n\n  public sendStandardNok(): void {\n    this.info({\n      text: 'Hopla - Das hat nicht funktioniert!',\n      typ: 'error',\n    });\n  }\n\n  private delay(): void {\n    setTimeout(() => {\n      this.infoSubject.next(undefined);\n    }, 3000);\n  }\n}\n",
            "type": "injectable"
        },
        {
            "name": "TrainingService",
            "id": "injectable-TrainingService-2e2d0abc531cebc94c8ad4718231ffeb0bbc701105149664692be747cdb7209e8adb1b0d9246a091018f929c9f5230a6e391651b7fbbe8b1c7de556964b40c4e",
            "file": "src/app/commons/service/training.service.ts",
            "properties": [
                {
                    "name": "path",
                    "defaultValue": "'training'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "BaseHttpService"
                    }
                },
                {
                    "name": "httpClient",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HttpClient",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "BaseHttpService"
                    }
                }
            ],
            "methods": [
                {
                    "name": "getAllOwnOpenTrainings$",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "getAllOwnTraining$",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "getAllTrainingInPayroll$",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<TrainingDto[]>",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "patch$",
                    "args": [
                        {
                            "name": "trainingDto",
                            "type": "TrainingDto",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "trainingDto",
                            "type": "TrainingDto",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "create$",
                    "args": [
                        {
                            "name": "dto",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "dto",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseHttpService"
                    }
                },
                {
                    "name": "createBackendEndpoint",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "BaseHttpService"
                    }
                },
                {
                    "name": "createFromFormData$",
                    "args": [
                        {
                            "name": "formData",
                            "type": "FormData",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "formData",
                            "type": "FormData",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseHttpService"
                    }
                },
                {
                    "name": "getAll$",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<T[]>",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "BaseHttpService"
                    }
                },
                {
                    "name": "uploadImage$",
                    "args": [
                        {
                            "name": "file",
                            "type": "File",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "file",
                            "type": "File",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseHttpService"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { TrainingDto } from 'src/app/commons/dto/training-dto.model';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HEADER } from './service.constants';\nimport { environment } from 'src/environments/environment';\nimport { BaseHttpService } from './base-http.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TrainingService extends BaseHttpService<TrainingDto> {\n  protected path: string = 'training';\n\n  constructor(httpClient: HttpClient) {\n    super(httpClient);\n  }\n\n  patch$(trainingDto: TrainingDto): Observable<any> {\n    const backendEndpoint = `${environment.BACKEND_URL}${this.path}`;\n    const body = JSON.stringify(trainingDto);\n    const headers = new HttpHeaders(HEADER);\n    return this.httpClient.put(backendEndpoint, body, {\n      headers,\n    });\n  }\n\n  public getAllOwnTraining$() {\n    return this.httpClient.get<any>(this.createBackendEndpoint() + '/trainer');\n  }\n\n  public getAllOwnOpenTrainings$() {\n    return this.httpClient.get<any>(\n      this.createBackendEndpoint() + '/allpayroll/'\n    );\n  }\n\n  public getAllTrainingInPayroll$(id: number): Observable<TrainingDto[]> {\n    return this.httpClient.get<any>(\n      this.createBackendEndpoint() + '/payroll/' + id\n    );\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "BaseHttpService",
            "type": "injectable"
        },
        {
            "name": "TrainingTypService",
            "id": "injectable-TrainingTypService-141ba7cd21f8de84112039d59891b5ba1e0dd96416fdeb4974d040356ad39a07b52775008a6bf608fd7d09329e880a6517ebab903b901c0ad93624f4c5fc1b4e",
            "file": "src/app/superior/service/training-typ.service.ts",
            "properties": [
                {
                    "name": "headers",
                    "defaultValue": "new HttpHeaders(HEADER)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "path",
                    "defaultValue": "'trainingtyp'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "BaseHttpService"
                    }
                },
                {
                    "name": "httpClient",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HttpClient",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "BaseHttpService"
                    }
                }
            ],
            "methods": [
                {
                    "name": "getImage$",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "create$",
                    "args": [
                        {
                            "name": "dto",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "dto",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseHttpService"
                    }
                },
                {
                    "name": "createBackendEndpoint",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "BaseHttpService"
                    }
                },
                {
                    "name": "createFromFormData$",
                    "args": [
                        {
                            "name": "formData",
                            "type": "FormData",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "formData",
                            "type": "FormData",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseHttpService"
                    }
                },
                {
                    "name": "getAll$",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<T[]>",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "BaseHttpService"
                    }
                },
                {
                    "name": "uploadImage$",
                    "args": [
                        {
                            "name": "file",
                            "type": "File",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "file",
                            "type": "File",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseHttpService"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HEADER } from '../../commons/service/service.constants';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { TrainingTypDto } from 'src/app/commons/dto/training-typ-dto.model';\nimport { BaseHttpService } from 'src/app/commons/service/base-http.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TrainingTypService extends BaseHttpService<TrainingTypDto> {\n  protected path: string = 'trainingtyp';\n  headers = new HttpHeaders(HEADER);\n  constructor(httpClient: HttpClient) {\n    super(httpClient);\n  }\n\n  public getImage$() {\n    return this.httpClient.get('http://localhost:8080/api/trainingtyp/image/9');\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "BaseHttpService",
            "type": "injectable"
        },
        {
            "name": "UserService",
            "id": "injectable-UserService-1513f3612500152a023dd1d98dd4a85ddc2afc0fdaa7777015c3fbd7df3dbf501cc2cd3c966f94d1583a320e4a77e881e502f1dbc842bed85ed50fd248586599",
            "file": "src/app/commons/service/user.service.ts",
            "properties": [
                {
                    "name": "path",
                    "defaultValue": "'user'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "BaseHttpService"
                    }
                },
                {
                    "name": "httpClient",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HttpClient",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "BaseHttpService"
                    }
                }
            ],
            "methods": [
                {
                    "name": "create$",
                    "args": [
                        {
                            "name": "dto",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "dto",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseHttpService"
                    }
                },
                {
                    "name": "createBackendEndpoint",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "BaseHttpService"
                    }
                },
                {
                    "name": "createFromFormData$",
                    "args": [
                        {
                            "name": "formData",
                            "type": "FormData",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "formData",
                            "type": "FormData",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseHttpService"
                    }
                },
                {
                    "name": "getAll$",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<T[]>",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "BaseHttpService"
                    }
                },
                {
                    "name": "uploadImage$",
                    "args": [
                        {
                            "name": "file",
                            "type": "File",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "file",
                            "type": "File",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseHttpService"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { UserDto } from 'src/app/commons/dto/user-dto.model';\nimport { BaseHttpService } from './base-http.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService extends BaseHttpService<UserDto> {\n  protected path: string = 'user';\n\n  constructor(httpClient: HttpClient) {\n    super(httpClient);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "BaseHttpService",
            "type": "injectable"
        }
    ],
    "guards": [
        {
            "name": "AuthGuardSuperior",
            "id": "injectable-AuthGuardSuperior-3d67f23392649c5235de045955274bbb71aef16a58f4a71fd7a47fb798406547e5569e18f7162caaf8c6d9dc62a5b50d87ccbf156c901915ef7c139466b524ae",
            "file": "src/app/commons/guards/superior-guard.ts",
            "properties": [],
            "methods": [
                {
                    "name": "canActivate",
                    "args": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable | boolean",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  RouterStateSnapshot,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { LocalStoreService } from '../service/jwt.service';\nimport { Injectable } from '@angular/core';\nimport { Roles } from '../models/role.model';\nimport { Authority } from '../dto/role-dto.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuardSuperior implements CanActivate {\n  constructor(private localStoreService: LocalStoreService) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean> | boolean {\n    const neededRoles: Authority[] = ['ROLE_SUPERIOR'];\n    const role: Roles = {\n      authority: neededRoles,\n    };\n\n    // Check Role\n    return this.localStoreService.hasAtLeastOneRole(role);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "localStoreService",
                        "type": "LocalStoreService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "localStoreService",
                        "type": "LocalStoreService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "guard"
        }
    ],
    "interceptors": [
        {
            "name": "JwtIntercepterService",
            "id": "injectable-JwtIntercepterService-7cc4d166c041acef1d730845da61950153dd75984399b5a5371452c371118dbb0230c7b887ab44eabbdf8b85b2860fb5b024949103b6e16630fe8d3869577cc4",
            "file": "src/app/commons/intercepters/jwt-intercepter.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "intercept",
                    "args": [
                        {
                            "name": "httpRequest",
                            "type": "HttpRequest<any>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "next",
                            "type": "HttpHandler",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<HttpEvent<any>>",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "httpRequest",
                            "type": "HttpRequest<any>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "next",
                            "type": "HttpHandler",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { JwtToken } from '../models/jwt-token.model';\nimport { LocalStoreService } from '../service/jwt.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class JwtIntercepterService implements HttpInterceptor {\n  constructor(private localStoreService: LocalStoreService) {}\n\n  intercept(\n    httpRequest: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    let token: JwtToken = this.localStoreService.getJwt();\n    if (token.token != '') {\n      httpRequest = httpRequest.clone({\n        setHeaders: { Authorization: `Bearer ${token.token}` },\n      });\n    }\n    return next.handle(httpRequest);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "localStoreService",
                        "type": "LocalStoreService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "localStoreService",
                        "type": "LocalStoreService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "interceptor"
        }
    ],
    "classes": [],
    "directives": [
        {
            "name": "HasRoleDirective",
            "id": "directive-HasRoleDirective-6688aaf6205e230b07ca06f989221513be4ae157e9241dc3428eb0c458e3b6c471897dd7c5b856489446d45e0c60c001bb0d1243b066ba5c9ab9ca16b3059afc",
            "file": "src/app/utils/has-role.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {\n  Directive,\n  Input,\n  OnInit,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\nimport { LocalStoreService } from '../commons/service/jwt.service';\nimport { Authority, Roles } from '../commons/models/role.model';\n\n@Directive({\n  selector: '[fit4bitHasRole]',\n})\nexport class HasRoleDirective implements OnInit {\n  @Input() public fit4bitHasRole: Authority[];\n\n  constructor(\n    private viewContainerRef: ViewContainerRef,\n    private templateRef: TemplateRef<any>,\n    private localStoreService: LocalStoreService\n  ) {}\n\n  public ngOnInit(): void {\n    const roleToCheck: Roles = {\n      authority: this.fit4bitHasRole,\n    };\n    if (this.localStoreService.hasAtLeastOneRole(roleToCheck)) {\n      this.viewContainerRef.createEmbeddedView(this.templateRef);\n    } else {\n      this.viewContainerRef.clear();\n    }\n  }\n}\n",
            "selector": "[fit4bitHasRole]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "fit4bitHasRole",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "Authority[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "implements": [
                "OnInit"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "viewContainerRef",
                        "type": "ViewContainerRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "templateRef",
                        "type": "TemplateRef<any>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "localStoreService",
                        "type": "LocalStoreService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "viewContainerRef",
                        "type": "ViewContainerRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "templateRef",
                        "type": "TemplateRef<any>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "localStoreService",
                        "type": "LocalStoreService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        }
    ],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-cd7b8b667804969510bdacfb9443fc2af299fcfe03b4e22066b1454f445fa35693e8fa2859ddd3317d5198b8eede488978b7b0cb03dfa06f7f2e4b7f0ca615db",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { LocalStoreService } from './commons/service/jwt.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  constructor(private localStoreService: LocalStoreService) {}\n\n  ngOnInit(): void {\n    this.localStoreService.clear();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "mat-sidenav-container,\nmat-sidenav-content,\nmat-sidenav {\n  height: 100%;\n}\n\nmat-sidenav {\n  width: 250px;\n}\n",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "localStoreService",
                        "type": "LocalStoreService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "localStoreService",
                        "type": "LocalStoreService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<app-top-navigation></app-top-navigation>\n<main>\n  <fit4bit-snack-bar></fit4bit-snack-bar>\n  <router-outlet></router-outlet>\n</main>\n"
        },
        {
            "name": "BackdropComponent",
            "id": "component-BackdropComponent-173787f1e204647c8237307ba24117003bd2a15a0604e46009aaf895cf96157e6618a8ff181e08df0f8a6dd50aaad97fe807d4506462d9efc6d494f09f0aa1f2",
            "file": "src/app/commons/components/backdrop/backdrop.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "fit4bit-backdrop",
            "styleUrls": [
                "./backdrop.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./backdrop.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "closeEmitter",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "EventEmitter<void>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "close",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Output } from '@angular/core';\n\n@Component({\n  selector: 'fit4bit-backdrop',\n  templateUrl: './backdrop.component.html',\n  styleUrls: ['./backdrop.component.scss'],\n})\nexport class BackdropComponent {\n  @Output()\n  closeEmitter: EventEmitter<void> = new EventEmitter();\n\n  public close(): void {\n    this.closeEmitter.emit();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "#box {\n  position: fixed;\n  top: 0;\n  left: 0;\n  height: 100%;\n  width: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  cursor: pointer;\n  animation-duration: 2s;\n  animation-name: fadeIn;\n}\n\n@keyframes fadeIn {\n  0% {\n    background-color: transparent;\n  }\n}\n",
                    "styleUrl": "./backdrop.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div id=\"box\" (click)=\"close()\"></div>\n"
        },
        {
            "name": "BaseItemCardComponent",
            "id": "component-BaseItemCardComponent-32eaa5fdac3a2df59dbc3ab8b5350449df6a8d99dd93a4472a38fe76beb16e58abbc1bc3b91c69866031d1e7e4fcd4794e9496cd65459ce3b84bf3fb7aae6f4a",
            "file": "src/app/commons/components/base-item-card/base-item-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "fit4bit-base-item-card",
            "styleUrls": [
                "./base-item-card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./base-item-card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "large",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'fit4bit-base-item-card',\n  templateUrl: './base-item-card.component.html',\n  styleUrls: ['./base-item-card.component.scss'],\n})\nexport class BaseItemCardComponent implements OnInit {\n  constructor() {}\n\n  @Input()\n  public large = false;\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"colors.scss\";\n@import \"breakpoints\";\n\n.card-container {\n  display: flex;\n  flex-direction: row;\n  border-left: 10px $background-color-head-primary solid;\n  border-bottom: 1px $background-color-head-primary solid;\n  border-top: 1px $background-color-head-primary solid;\n  border-right: 1px $background-color-head-primary solid;\n  width: 500px;\n  height: 120px;\n  margin-left: 15px;\n  margin-bottom: 15px;\n  @include mobile {\n    flex-direction: column;\n    height: 200px;\n    width: 250px;\n    padding-right: 5px;\n    padding-bottom: 5px;\n  }\n}\n\n.large {\n  height: 200px;\n}\n\n.card-details {\n  display: flex;\n  flex-direction: column;\n  margin: 5px 20px 0 10px;\n  width: 100%;\n  height: 100%;\n  @include mobile {\n    width: unset;\n  }\n}\n",
                    "styleUrl": "./base-item-card.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"card-container\" [class.large]=\"large\">\n  <div class=\"img-container\">\n    <img\n      fxHide.lt-sm\n      src=\"https://images.squarespace-cdn.com/content/v1/58cceaa0f5e2314657e4ee36/8caf8801-4627-406b-9445-a91a9a95fc8b/jana.jpg?format=500w\"\n      alt=\"Yoga Bild\"\n      width=\"{{ large ? 200 : 120 }}\"\n      height=\"{{ large ? 200 : 120 }}\"\n    />\n  </div>\n  <div class=\"card-details\">\n    <ng-content></ng-content>\n  </div>\n</div>\n"
        },
        {
            "name": "BlankSlateInformationComponent",
            "id": "component-BlankSlateInformationComponent-35c4281a230d75849136c3c0c3e91cda696fc3965f446b6c44c0cfca8a09950d3bc7eae77b6132589031667e32713d794748f3a8d42d92273285d75b386f8935",
            "file": "src/app/commons/blank-slate-information/blank-slate-information.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "fit4bit-blank-slate-information",
            "styleUrls": [
                "./blank-slate-information.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./blank-slate-information.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "dontshowanymore",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'fit4bit-blank-slate-information',\n  templateUrl: './blank-slate-information.component.html',\n  styleUrls: ['./blank-slate-information.component.scss'],\n})\nexport class BlankSlateInformationComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  dontshowanymore() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".container {\n  width: 100%;\n  border: solid 1px black;\n}\n\n.close {\n  float: right;\n  position: sticky;\n  right: 0px;\n  top: 0px;\n}\n",
                    "styleUrl": "./blank-slate-information.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container\">\n  <mat-icon>close</mat-icon>\n  <fit4bit-close-button class=\"close\"></fit4bit-close-button>\n  <section class=\"information\">\n    Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy\n    eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam\n    voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet\n    clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit\n    amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam\n    nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed\n    diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet\n    clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit\n    amet.\n  </section>\n  <section class=\"disappear\">\n    <mat-checkbox class=\"example-margin\" (ngModel)=\"dontshowanymore()\"\n      >Indeterminate</mat-checkbox\n    >\n  </section>\n</div>\n"
        },
        {
            "name": "BubbleComponent",
            "id": "component-BubbleComponent-9cc3c1a30a567f672b46e7ff0910eade6806884fbe255b9b66a8aad9675d1028ff4ee2d2ddb73d7cfe7ab4b5dc60a6d87641c7dc46bd12599bde21f3dc824e72",
            "file": "src/app/commons/components/bubble/bubble.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "fit4bit-bubble",
            "styleUrls": [
                "./bubble.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./bubble.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'fit4bit-bubble',\n  templateUrl: './bubble.component.html',\n  styleUrls: ['./bubble.component.scss'],\n})\nexport class BubbleComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"colors.scss\";\n@import \"breakpoints.scss\";\n\n.inside {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 30px;\n  cursor: pointer;\n  background: $primary-color-bubble;\n  border-radius: 50%;\n  width: 50px;\n  height: 50px;\n  &:hover {\n    background: $primary-color-hover-bubble;\n  }\n}\n\n.bubble-container {\n  display: flex;\n  justify-content: space-between;\n  position: fixed;\n  width: 110px;\n  right: 20px;\n  top: 50px;\n  bottom: unset;\n  flex-direction: row;\n  @include mobile {\n    flex-direction: column;\n    right: 2px;\n    top: unset;\n    bottom: 20px;\n    width: unset;\n    height: 110px;\n  }\n}\n",
                    "styleUrl": "./bubble.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"bubble-container\">\n  <div class=\"inside\">\n    <ng-content select=\"[filter]\"></ng-content>\n  </div>\n  <div class=\"inside\">\n    <ng-content select=\"[add]\"></ng-content>\n  </div>\n</div>\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-a8ebc47a9477da3e9696803fdc882c86297d2c2eb086c1248c2711334a534f9a03b1d473f8df2e1b2a1405d195bac2eb99f66386d49368c0179c70e8e9215e9f",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhat background color to use\n",
                    "description": "<p>What background color to use</p>\n",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 711,
                            "end": 724,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 325,
                            "tagName": {
                                "pos": 712,
                                "end": 720,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 40,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs this the principal call to action on the page?\n",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 20,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHow large should the button be?\n",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 32,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 46,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  template: ` <button\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  >\n    {{ label }}\n  </button>`,\n  styleUrls: ['./button.css'],\n})\nexport default class ButtonComponent {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary\n      ? 'storybook-button--primary'\n      : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  font-family: \"Nunito Sans\", \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  border: 0;\n  border-radius: 3em;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n}\n.storybook-button--primary {\n  color: white;\n  background-color: #1ea7fd;\n}\n.storybook-button--secondary {\n  color: #333;\n  background-color: transparent;\n  box-shadow: rgba(0, 0, 0, 0.15) 0 0 0 1px inset;\n}\n.storybook-button--small {\n  font-size: 12px;\n  padding: 10px 16px;\n}\n.storybook-button--medium {\n  font-size: 14px;\n  padding: 11px 20px;\n}\n.storybook-button--large {\n  font-size: 16px;\n  padding: 12px 24px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 48
                    }
                }
            }
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-77e9664767cdbced05ba0b323e0db32174cd9db6e65f1929f89c049c8587cedc502c281e0b9d5e0b2acc98f05aa45bd11837680db0d72e3716fd1d284565e270-1",
            "file": "src/app/commons/components/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "fit4bit-button",
            "styleUrls": [
                "./button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'fit4bit-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.scss'],\n})\nexport class ButtonComponent implements OnInit {\n  constructor() {}\n\n  @Input()\n  public name: string;\n\n  @Input()\n  public disabled = false;\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"colors\";\n\nbutton {\n  background-color: $background-color-button;\n  border: none;\n  font-size: 16px;\n  padding: 15px 32px;\n  border-radius: 5px;\n  font-weight: bold;\n  margin: 10px 0 10px 0;\n\n  &:hover {\n    cursor: pointer;\n    background-color: $background-color-hover-button;\n  }\n}\n\n.disabled {\n  cursor: unset;\n  background-color: $disabled;\n  &:hover {\n    cursor: unset;\n    background-color: $disabled;\n  }\n}\n",
                    "styleUrl": "./button.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "ButtonComponent-1",
            "templateData": "<button [class.disabled]=\"disabled\">{{ name }}</button>\n"
        },
        {
            "name": "CheckboxCardComponent",
            "id": "component-CheckboxCardComponent-b687f74d9cb786eac0849554560e218027d4e9b01f02f934107e436cb4710dd3e800c1263fe747a202c9aedc080703a98224cfa453bad66ae0d79fd995d8584b",
            "file": "src/app/commons/components/checkbox-card/card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "fit4bit-checkbox-card",
            "styleUrls": [
                "./checkbox-card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./checkbox-card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "active",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "trainingDto",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "TrainingDto",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toggle",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { TrainingDto } from 'src/app/commons/dto/training-dto.model';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { CardItemService } from '../../../trainer/payroll/payroll-overview/card-item.service';\n\n@Component({\n  selector: 'fit4bit-checkbox-card',\n  templateUrl: './checkbox-card.component.html',\n  styleUrls: ['./checkbox-card.component.scss'],\n})\nexport class CheckboxCardComponent implements OnInit {\n  @Input()\n  public active: boolean;\n\n  @Input()\n  public trainingDto: TrainingDto;\n\n  constructor(private cardItemService: CardItemService) {}\n\n  ngOnInit(): void {\n    if (this.active) {\n      this.cardItemService.addItem(this.trainingDto);\n    }\n  }\n\n  public toggle(): void {\n    this.active = !this.active;\n    if (this.active) {\n      this.cardItemService.addItem(this.trainingDto);\n    } else {\n      this.cardItemService.removeItem(this.trainingDto);\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"colors\";\n@import \"spaces.scss\";\n\n.container {\n  display: flex;\n  justify-content: space-between;\n  padding: 10px;\n  width: 400px;\n  border: 1px solid $border-color;\n  border-radius: 5px;\n  background-color: $background-color;\n  margin-bottom: $space_10;\n  &:hover {\n    background-color: $background-color-selected;\n    cursor: pointer;\n  }\n}\n\n.is-selected {\n  background-color: $background-color-selected;\n}\n\n.is-hidden {\n  visibility: hidden;\n}\n\n.training {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  align-items: flex-start;\n}\n\n.image {\n  align-self: center;\n}\n",
                    "styleUrl": "./checkbox-card.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cardItemService",
                        "type": "CardItemService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "cardItemService",
                        "type": "CardItemService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container\" (click)=\"toggle()\" [class.is-selected]=\"active\">\n  <div class=\"image\"></div>\n  <div class=\"training\">\n    <div>Name: {{ trainingDto.trainingTyp?.name }}</div>\n    <div>Datum: {{ trainingDto.runningDate | date: \"dd.MM.yyyy HH.mm\" }}</div>\n    <div *ngIf=\"trainingDto.trainingTyp?.image\">\n      <img [src]=\"trainingDto.trainingTyp?.image\" />\n    </div>\n  </div>\n  payroll:\n\n  <div [class.is-hidden]=\"!active\" class=\"image\">\n    <img src=\"../../../../assets/icon/ok_25.svg\" alt=\"ok\" />\n  </div>\n</div>\n"
        },
        {
            "name": "ChipsComponent",
            "id": "component-ChipsComponent-67b3e0fd7c9263db14f2a2452350a22903f4d3c91ee703e24d9ffe2c9fd3ae394a67307e2c1837cde7f5b02810103bffd6ff2d0cd06e1ff2d240887b28b00dae",
            "file": "src/app/commons/components/chips/chips.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "fit4bit-chips",
            "styleUrls": [
                "./chips.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./chips.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "isActive",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "length",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'fit4bit-chips',\n  templateUrl: './chips.component.html',\n  styleUrls: ['./chips.component.scss'],\n})\nexport class ChipsComponent implements OnInit {\n  @Input()\n  public text: string;\n\n  @Input()\n  public isActive = false;\n\n  @Input()\n  public length: number;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"colors\";\n@import \"spaces.scss\";\n\n.text {\n  margin-left: 5px;\n}\n\n.isNotActiveIcon {\n  visibility: hidden;\n}\n\n.container {\n  font-size: 12px;\n  font-weight: bold;\n  height: 30px; // Todo: Cross icon kleiner machen!\n  border-radius: 10px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  padding-right: 20px;\n  width: fit-content;\n  border: solid $background-color-head-primary 1px;\n\n  &:hover {\n    background-color: $background-color-selected;\n    cursor: pointer;\n  }\n}\n\n.selected {\n  background-color: $background-color-selected;\n}\n",
                    "styleUrl": "./chips.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 16
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container\" [class.selected]=\"isActive\">\n  <div>\n    <fit4bit-close-button\n      [class.isNotActiveIcon]=\"!isActive\"\n    ></fit4bit-close-button>\n  </div>\n  <div class=\"text\">\n    <span *ngIf=\"length < 0\">{{ text }}</span>\n    <span matBadge=\"{{ length }}\" matBadgeOverlap=\"false\"> {{ text }} </span>\n  </div>\n</div>\n"
        },
        {
            "name": "Fit4bitCloseButtonComponent",
            "id": "component-Fit4bitCloseButtonComponent-f78e36a7ce78c80ab835cec9ad4d1bba8b9c9db17c6556974c0f2a7fd17d6ae2a14c99a35e2a0f42e35ae4b2d64c9568f8dd782dabb87a8a5a1946671f60e02e",
            "file": "src/app/commons/components/fit4bit-close-button/fit4bit-close-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "fit4bit-close-button",
            "styleUrls": [
                "./fit4bit-close-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./fit4bit-close-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'fit4bit-close-button',\n  templateUrl: './fit4bit-close-button.component.html',\n  styleUrls: ['./fit4bit-close-button.component.scss'],\n})\nexport class Fit4bitCloseButtonComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "button {\n  border-radius: 50%;\n  padding: 5px;\n  text-align: center;\n  text-decoration: none;\n  display: flex;\n  border: none;\n  background-color: rgb(239, 239, 239);\n  margin: 4px;\n}\n\nbutton:hover {\n  background-color: rgb(200, 200, 200);\n  cursor: pointer;\n}\n",
                    "styleUrl": "./fit4bit-close-button.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<button>\n  <img src=\"../../../../assets/icon/cross_xs.svg\" alt=\"cross\" />\n</button>\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-dd3ecb406918e653bee50589b91f3ec0ec38e81558c3fa2e3fb05bdbe14ec25a66a7ada70cc03b988df49f8ab65e0862f8823317ce43a9c8b22a9fa5cefe73b3",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"wrapper\">\n      <div>\n        <svg\n          width=\"32\"\n          height=\"32\"\n          viewBox=\"0 0 32 32\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            primary\n            size=\"small\"\n            primary=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 70,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 79,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 73,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 76,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { User } from './User';\n\n@Component({\n  selector: 'storybook-header',\n  template: `<header>\n    <div class=\"wrapper\">\n      <div>\n        <svg\n          width=\"32\"\n          height=\"32\"\n          viewBox=\"0 0 32 32\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            primary\n            size=\"small\"\n            primary=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>`,\n  styleUrls: ['./header.css'],\n})\nexport default class HeaderComponent {\n  @Input()\n  user: User | null = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper {\n  font-family: \"Nunito Sans\", \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\nsvg {\n  display: inline-block;\n  vertical-align: top;\n}\n\nh1 {\n  font-weight: 900;\n  font-size: 20px;\n  line-height: 1;\n  margin: 6px 0 6px 10px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nbutton + button {\n  margin-left: 10px;\n}\n\n.welcome {\n  color: #333;\n  font-size: 14px;\n  margin-right: 10px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "ImageUploaderComponent",
            "id": "component-ImageUploaderComponent-88635af39ef5cd85adeadf7fccd34f504c99886fad385e1e3aef8910ae3eec962942002700079b4cba1af7c16b8e5567147566674122d32126af7ce3fffee329",
            "file": "src/app/commons/pages/image-uploader/image-uploader.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "fit4bit-image-uploader",
            "styleUrls": [
                "./image-uploader.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./image-uploader.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'fit4bit-image-uploader',\n  templateUrl: './image-uploader.component.html',\n  styleUrls: ['./image-uploader.component.scss'],\n})\nexport class ImageUploaderComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./image-uploader.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>image-uploader works!</p>\n"
        },
        {
            "name": "LoaderComponent",
            "id": "component-LoaderComponent-d5beb12e3d3cb08c8d3a384270b36df4881001f3539ccc5c39fcaf335d51bce3657e63fd7ba5bb2b1fbe18007e0808ac18a5c1e7097eef5c40083238240e646a",
            "file": "src/app/commons/loader/loader.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-loader",
            "styleUrls": [
                "./loader.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./loader.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isLoading",
                    "defaultValue": "this.loaderService.isLoading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { LoaderService } from '../service/loader.service';\n\n@Component({\n  selector: 'app-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.css'],\n})\nexport class LoaderComponent implements OnInit {\n  isLoading: BehaviorSubject<boolean> = this.loaderService.isLoading;\n\n  constructor(private loaderService: LoaderService) {}\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".overlay {\n  position: fixed;\n  display: block;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  background-color: rgba(74, 74, 74, 0.8);\n  z-index: 99999;\n}\n.spinner {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n",
                    "styleUrl": "./loader.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "loaderService",
                        "type": "LoaderService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "loaderService",
                        "type": "LoaderService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div *ngIf=\"isLoading | async\" class=\"overlay\">\n  <mat-spinner class=\"spinner\"></mat-spinner>\n</div>\n"
        },
        {
            "name": "LoginComponent",
            "id": "component-LoginComponent-7727b96a3a8f45bb7bbe6f7ccc2c09bd810c6c1d8aad5bc546555a56fe7c5fd890349954caecfabd096739dd090c04d810166f0dc76bb85687ccdb74303beda1",
            "file": "src/app/commons/pages/login/login.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "fit4bit-login",
            "styleUrls": [
                "./login.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./login.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "profileForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "login",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '../../service/auth.service';\n\n@Component({\n  selector: 'fit4bit-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n  public profileForm: FormGroup;\n\n  constructor(private authService: AuthService) {}\n\n  ngOnInit(): void {\n    this.profileForm = new FormGroup({\n      username: new FormControl('', [Validators.required]),\n      password: new FormControl('', [Validators.required]),\n    });\n  }\n\n  public login(): void {\n    this.authService.login$(this.profileForm.value).subscribe();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./login.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<fit4bit-main-content-container [title]=\"'Hier kannst du einloggen'\">\n  <fit4bit-base-item-card [large]=\"true\">\n    <form\n      fxLayout=\"column\"\n      fxLayoutAlign=\"center center\"\n      [formGroup]=\"profileForm\"\n      (ngSubmit)=\"login()\"\n    >\n      <mat-form-field>\n        <mat-label for=\"username\">Email</mat-label>\n        <input id=\"username\" matInput type=\"text\" formControlName=\"username\" />\n      </mat-form-field>\n\n      <mat-form-field>\n        <mat-label for=\"password\">Passwort</mat-label>\n        <input id=\"password\" matInput type=\"text\" formControlName=\"password\" />\n      </mat-form-field>\n\n      <button\n        mat-raised-button\n        color=\"primary\"\n        type=\"submit\"\n        [disabled]=\"!profileForm.valid\"\n      >\n        Speichern\n      </button>\n    </form>\n  </fit4bit-base-item-card>\n</fit4bit-main-content-container>\n"
        },
        {
            "name": "MainContentContainerComponent",
            "id": "component-MainContentContainerComponent-2d9879f490db00d1ec3223b706e88b0e776cb3022d15c7636210dfbd39896e0ca17a59e842f0de184cd19b7e2c4c5042f880f56c9e187ef1cae9751d76add532",
            "file": "src/app/commons/shared/main-content-container/main-content-container.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "fit4bit-main-content-container",
            "styleUrls": [
                "./main-content-container.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./main-content-container.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'fit4bit-main-content-container',\n  templateUrl: './main-content-container.component.html',\n  styleUrls: ['./main-content-container.component.scss'],\n})\nexport class MainContentContainerComponent implements OnInit {\n  @Input()\n  public title: string;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".main-container {\n  padding: 20px 20px;\n}\n",
                    "styleUrl": "./main-content-container.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 10
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"main-container\">\n  <h1>\n    {{ title }}\n  </h1>\n</div>\n\n<div>\n  <ng-content></ng-content>\n</div>\n"
        },
        {
            "name": "MenuContentComponent",
            "id": "component-MenuContentComponent-38298cb2732ef50a9d389a56ffd36c470538e7dc80326749900ce2fc2cadafe1f781657a7485cfc1aeed8cd1cfdb117485af82d80a9193df20945b07cddace6a",
            "file": "src/app/navigation/menu-content/menu-content.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "fit4bit-menu-content",
            "styleUrls": [
                "./menu-content.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./menu-content.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "sideBarIsOpen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "user$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<User>",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "logout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { LocalStoreService } from '../../commons/service/jwt.service';\nimport { SnackbarService } from '../../commons/service/snackbar.service';\nimport { User } from '../../commons/models/user.model';\n\n@Component({\n  selector: 'fit4bit-menu-content',\n  templateUrl: './menu-content.component.html',\n  styleUrls: ['./menu-content.component.scss'],\n})\nexport class MenuContentComponent implements OnInit {\n  public user$: Observable<User>;\n  public sideBarIsOpen = false;\n\n  constructor(\n    private localStoreService: LocalStoreService,\n    private snackbar: SnackbarService\n  ) {}\n\n  ngOnInit(): void {\n    this.user$ = this.localStoreService.user$.pipe();\n  }\n\n  public logout(): void {\n    this.localStoreService.clear();\n    this.snackbar.info({ text: 'Du bist ausgeloggt', typ: 'info' });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"colors.scss\";\n@import \"breakpoints\";\n\na {\n  text-decoration: none;\n  color: white;\n  @include mobile {\n    color: $background-color-head-primary;\n  }\n}\n\na:hover,\na:active {\n  color: lightgrey;\n}\n\n.navigation-items {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n}\n\n.head {\n  background-color: $background-color-head-primary;\n}\n\n.head p,\n.head h1 {\n  color: $text-head-color;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n.items-container {\n  display: flex;\n  flex-direction: row;\n  padding-right: 5px;\n  @include mobile {\n    flex-direction: column;\n  }\n}\n\n.items-container > div {\n  padding-right: 15px;\n}\n",
                    "styleUrl": "./menu-content.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "localStoreService",
                        "type": "LocalStoreService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "snackbar",
                        "type": "SnackbarService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "localStoreService",
                        "type": "LocalStoreService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "snackbar",
                        "type": "SnackbarService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div *ngIf=\"user$ | async as user; else toLogin\" class=\"items-container\">\n  <div>\n    <a routerLink=\"superior/newuser\" *fit4bitHasRole=\"['ROLE_SUPERIOR']\"\n      >Person erstellen</a\n    >\n  </div>\n\n  <div>\n    <a routerLink=\"superior/room\" *fit4bitHasRole=\"['ROLE_SUPERIOR']\">Raum</a>\n  </div>\n  <div>\n    <a routerLink=\"superior/newtrainingtyp\" *fit4bitHasRole=\"['ROLE_SUPERIOR']\">\n      Neuer Trainings Typ\n    </a>\n  </div>\n  <div>\n    <a routerLink=\"superior/newtraining\" *fit4bitHasRole=\"['ROLE_SUPERIOR']\">\n      Neues Training\n    </a>\n  </div>\n  <div>\n    <a routerLink=\"trainer/overview\" *fit4bitHasRole=\"['ROLE_TRAINER']\">\n      Deine Trainings</a\n    >\n  </div>\n  <div>\n    <a routerLink=\"trainer/payroll\" *fit4bitHasRole=\"['ROLE_TRAINER']\">\n      Monatsabrechnung</a\n    >\n  </div>\n  <div>\n    <a routerLink=\"/\">\n      {{ user.email }}\n    </a>\n  </div>\n  <div><a routerLink=\"/\" (click)=\"logout()\">Ausloggen</a></div>\n</div>\n\n<ng-template #toLogin><a routerLink=\"login\">Einloggen</a></ng-template>\n"
        },
        {
            "name": "NewpayrollComponent",
            "id": "component-NewpayrollComponent-818ca711698a9f583514b1c177a08009ab02f199c00cd4682e0037aa9d96045119940e2000ac7d136384a5a96c43da737ab5c845a316624fe77c1c2943e035dc",
            "file": "src/app/trainer/payroll/create-payroll/newpayroll.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "fit4bit-newpayroll",
            "styleUrls": [
                "./newpayroll.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./newpayroll.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "validEmitter",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "EventEmitter<boolean>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "profileForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "create",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { PayrollService } from '../../../commons/service/payroll.service';\r\nimport {Component, EventEmitter, OnInit, Output} from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport {SnackbarService} from \"../../../commons/service/snackbar.service\";\r\n\r\n@Component({\r\n  selector: 'fit4bit-newpayroll',\r\n  templateUrl: './newpayroll.component.html',\r\n  styleUrls: ['./newpayroll.component.scss'],\r\n})\r\nexport class NewpayrollComponent implements OnInit {\r\n  profileForm: FormGroup;\r\n\r\n  @Output()\r\n  public validEmitter: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n\r\n  constructor(private payrollService: PayrollService, private snackbarService: SnackbarService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.profileForm = new FormGroup({\r\n      month: new FormControl('', [Validators.required, Validators.min(1), Validators.max(12)]),\r\n      year: new FormControl('', [Validators.required, Validators.min(2022), Validators.max(2026)]),\r\n    });\r\n    this.profileForm.valueChanges.subscribe(() => this.validEmitter.emit(this.profileForm.valid))\r\n  }\r\n\r\n public create() {\r\n    const payroll = this.profileForm.value;\r\n    this.payrollService.create$(payroll).subscribe(()=>this.snackbarService.sendDataSaveOk(),()=> this.snackbarService.sendStandardNok());\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./newpayroll.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "payrollService",
                        "type": "PayrollService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "snackbarService",
                        "type": "SnackbarService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "payrollService",
                        "type": "PayrollService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "snackbarService",
                        "type": "SnackbarService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<section>\n  <form\n    fxLayout=\"column\"\n    fxLayoutAlign=\"center center\"\n    [formGroup]=\"profileForm\"\n    (ngSubmit)=\"create()\"\n  >\n    <mat-form-field>\n      <mat-label for=\"month\">Monat</mat-label>\n      <input id=\"month\" matInput type=\"number\" formControlName=\"month\" />\n    </mat-form-field>\n    <mat-form-field>\n      <mat-label for=\"year\">Jahr</mat-label>\n      <input id=\"year\" matInput type=\"number\" formControlName=\"year\" />\n    </mat-form-field>\n  </form>\n</section>\n"
        },
        {
            "name": "NewTraininTypComponent",
            "id": "component-NewTraininTypComponent-fa920cd7a5afb9d4963df1126145ecb24fb7609792641f564c8a0088f5a9603b33bab4eac57a0d97811cca4029aaed992d8e6c6e1ab25c5a306be22dea06fca5",
            "file": "src/app/superior/pages/new-trainin-typ/new-trainin-typ.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "fit4bit-new-trainin-typ",
            "styleUrls": [
                "./new-trainin-typ.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./new-trainin-typ.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "base64Data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "file",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "File",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "profileForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "retrievedImage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "retrieveResonse",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "create2",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "image",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onUpload",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { TrainingTypDto } from 'src/app/commons/dto/training-typ-dto.model';\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { TrainingTypService } from '../../service/training-typ.service';\n\n@Component({\n  selector: 'fit4bit-new-trainin-typ',\n  templateUrl: './new-trainin-typ.component.html',\n  styleUrls: ['./new-trainin-typ.component.scss'],\n})\nexport class NewTraininTypComponent {\n  profileForm: FormGroup;\n  retrievedImage: string;\n  base64Data: string;\n  retrieveResonse: any;\n  file: File;\n\n  constructor(private trainingTypService: TrainingTypService) {}\n\n  ngOnInit(): void {\n    this.profileForm = new FormGroup({\n      name: new FormControl('', [Validators.required]),\n    });\n\n    this.image();\n  }\n\n  create2() {\n    const newTrainingTyp: TrainingTypDto = this.profileForm.value;\n    console.log('formData: ', this.profileForm);\n    let formData = new FormData();\n    formData.append('name', newTrainingTyp.name!);\n    if (this.file) {\n      formData.append('file', this.file, this.file.name);\n    }\n    this.trainingTypService.createFromFormData$(formData).subscribe();\n  }\n\n  onUpload(event: any) {\n    this.file = event.target.files[0];\n  }\n\n  // Bild lesen\n  image() {\n    this.trainingTypService.getImage$().subscribe((res) => {\n      this.retrieveResonse = res;\n      this.base64Data = this.retrieveResonse.image;\n      this.retrievedImage = 'data:image/jpeg;base64,' + this.base64Data;\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"breakpoints\";\n@import \"spaces.scss\";\n@import \"colors.scss\";\n\nmat-form-field {\n  width: 300px;\n}\n\n.file-input {\n  display: none;\n}\n\n.hint {\n  display: flex;\n  align-items: center;\n  background-color: $background-color-head-secondary;\n  color: white;\n  padding: 3px 10px 3px 10px;\n  box-shadow: 10px 10px 5px silver;\n}\n\n.upload-btn {\n  margin-right: 5px;\n}\n\n.submit-btn {\n  margin: 10px;\n}\n",
                    "styleUrl": "./new-trainin-typ.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "trainingTypService",
                        "type": "TrainingTypService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "trainingTypService",
                        "type": "TrainingTypService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<fit4bit-main-content-container [title]=\"'Neuer Trainings Typ'\">\n  <section>\n    <form\n      fxLayout=\"column\"\n      fxLayoutAlign=\"center center\"\n      [formGroup]=\"profileForm\"\n      (ngSubmit)=\"create2()\"\n    >\n      <mat-form-field>\n        <mat-label for=\"name\">Name des Trainingstyps</mat-label>\n        <input id=\"name\" matInput type=\"text\" formControlName=\"name\" />\n      </mat-form-field>\n\n      <div class=\"hint\">\n        <button\n          mat-mini-fab\n          color=\"primary\"\n          class=\"upload-btn\"\n          (click)=\"fileUpload.click()\"\n        >\n          <mat-icon>image</mat-icon>\n        </button>\n        <p>Hier kannst du noch ein Bild hochladen.</p>\n      </div>\n\n      <button\n        mat-raised-button\n        color=\"primary\"\n        type=\"submit\"\n        [disabled]=\"!profileForm.valid\"\n        class=\"submit-btn\"\n      >\n        Speichern\n      </button>\n    </form>\n  </section>\n\n  <input\n    type=\"file\"\n    class=\"file-input\"\n    (change)=\"onUpload($event)\"\n    #fileUpload\n  />\n\n  <div *ngIf=\"retrievedImage\">\n    <img [src]=\"retrievedImage\" />\n  </div>\n</fit4bit-main-content-container>\n"
        },
        {
            "name": "NewUserComponent",
            "id": "component-NewUserComponent-eb778ee12162466ccd233b6dcecbb948f1a831dbe3475061f3876612d5607e1ca2cab798be5bb7348578d16b17b9436aacbbec1f4280471a858e5757031b25bd",
            "file": "src/app/superior/pages/new-user/new-user.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "fit4bit-new-user",
            "styleUrls": [
                "./new-user.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./new-user.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "profileForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "create",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { UserService } from 'src/app/commons/service/user.service';\n\n@Component({\n  selector: 'fit4bit-new-user',\n  templateUrl: './new-user.component.html',\n  styleUrls: ['./new-user.component.scss'],\n})\nexport class NewUserComponent implements OnInit {\n  public profileForm: FormGroup;\n\n  constructor(private userServiceService: UserService) {}\n\n  ngOnInit(): void {\n    this.profileForm = new FormGroup({\n      firstName: new FormControl('', [Validators.required]),\n      lastName: new FormControl('', [Validators.required]),\n      email: new FormControl('', [Validators.required, Validators.email]),\n    });\n  }\n\n  create(): void {\n    const newUser = this.profileForm.value;\n    this.userServiceService.create$(newUser).subscribe();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "mat-form-field {\n  width: 300px;\n}\n",
                    "styleUrl": "./new-user.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "userServiceService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "userServiceService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<fit4bit-main-content-container [title]=\"'Neue Person erstellen'\">\n  <section>\n    <form\n      fxLayout=\"column\"\n      fxLayoutAlign=\"center center\"\n      [formGroup]=\"profileForm\"\n      (ngSubmit)=\"create()\"\n    >\n      <mat-form-field>\n        <mat-label for=\"firstName\">Vorname</mat-label>\n        <input\n          id=\"firstName\"\n          matInput\n          type=\"text\"\n          formControlName=\"firstName\"\n        />\n      </mat-form-field>\n\n      <mat-form-field>\n        <mat-label for=\"lastName\">Nachname</mat-label>\n        <input id=\"lastName\" matInput type=\"text\" formControlName=\"lastName\" />\n      </mat-form-field>\n\n      <mat-form-field>\n        <mat-label for=\"email\">Email</mat-label>\n        <input id=\"email\" matInput type=\"text\" formControlName=\"email\" />\n      </mat-form-field>\n\n      <button\n        mat-raised-button\n        color=\"primary\"\n        type=\"submit\"\n        [disabled]=\"!profileForm.valid\"\n      >\n        Speichern\n      </button>\n    </form>\n  </section>\n</fit4bit-main-content-container>\n"
        },
        {
            "name": "OverlayComponent",
            "id": "component-OverlayComponent-5b518b4be0793c6bd47c51ba720e495ea5cacfb1e56dad1abf3f4b81a1951299686a4aa5d41af947f23285b4c641bbdb3714d2f02ee81645f5b22b18a9ffd23d",
            "file": "src/app/commons/components/overlay/overlay.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "fit4bit-overlay",
            "styleUrls": [
                "./overlay.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./overlay.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "buttonText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "show",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "buttonClicked",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "EventEmitter<void>"
                },
                {
                    "name": "resetOverlayEmitter",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "EventEmitter<void>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "closeMe",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'fit4bit-overlay',\n  templateUrl: './overlay.component.html',\n  styleUrls: ['./overlay.component.scss'],\n})\nexport class OverlayComponent {\n  @Output() public resetOverlayEmitter: EventEmitter<void> = new EventEmitter();\n  @Output() public buttonClicked: EventEmitter<void> = new EventEmitter();\n  @Input() public show: boolean;\n  @Input() public title: string;\n  @Input() public buttonText: string;\n\n  public closeMe(): void {\n    this.show = false;\n    this.resetOverlayEmitter.emit();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"breakpoints\";\n@import \"spaces.scss\";\n@import \"colors.scss\";\n\n#overlay {\n  position: fixed;\n  top: 0;\n  width: 600px;\n  height: 100%;\n  right: 0;\n  z-index: 3;\n  background-color: white;\n  animation-name: moveInFromSide;\n  animation-duration: 2s;\n\n  @include mobile {\n    top: 20px;\n    width: 100%;\n    animation-name: moveInFromBottomToTop;\n    border-radius: 25px;\n    left: 0;\n  }\n}\n\n@keyframes moveInFromSide {\n  0% {\n    right: -100%;\n  }\n}\n\n@keyframes moveInFromBottomToTop {\n  0% {\n    top: 800px;\n  }\n}\n\n.head-overlay {\n  background-color: $background-color-head-secondary;\n  margin-bottom: $space_10;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\n.head-overlay p,\n.head-overlay h1 {\n  color: $text-head-color;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n.wrapper {\n  padding: 8px 5px 5px 8px;\n}\n",
                    "styleUrl": "./overlay.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<fit4bit-backdrop (closeEmitter)=\"closeMe()\" *ngIf=\"show\"></fit4bit-backdrop>\n<div id=\"overlay\" *ngIf=\"show\">\n  <div class=\"head-overlay wrapper\">\n    <h1>{{ title }}</h1>\n\n    <ng-content select=\"[action]\"></ng-content>\n  </div>\n  <div class=\"wrapper\">\n    <ng-content></ng-content>\n  </div>\n</div>\n"
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-0386107bf8b670a32da3ddc51428a4396e6cce9da05c77012def0d3d05568d312123aedb333bb57af7e16f219241bc13133d455954a6085d4aeac9bee1096328",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a\n          href=\"https://componentdriven.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page\n        states without needing to navigate to them in your app. Here are some\n        handy patterns for managing page data in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose\n          such data from the \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock\n          these services out using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a\n          href=\"https://storybook.js.org/tutorials/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a\n          href=\"https://storybook.js.org/docs\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          docs\n        </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg\n          width=\"10\"\n          height=\"10\"\n          viewBox=\"0 0 12 12\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User | null",
                    "optional": false,
                    "description": "",
                    "line": 83
                }
            ],
            "methodsClass": [
                {
                    "name": "doCreateAccount",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 93,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 89,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { User } from './User';\n\n@Component({\n  selector: 'storybook-page',\n  template: `<article>\n    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a\n          href=\"https://componentdriven.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page\n        states without needing to navigate to them in your app. Here are some\n        handy patterns for managing page data in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose\n          such data from the \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock\n          these services out using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a\n          href=\"https://storybook.js.org/tutorials/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a\n          href=\"https://storybook.js.org/docs\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          docs\n        </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg\n          width=\"10\"\n          height=\"10\"\n          viewBox=\"0 0 12 12\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>`,\n  styleUrls: ['./page.css'],\n})\nexport default class PageComponent {\n  user: User | null = null;\n\n  doLogout() {\n    this.user = null;\n  }\n\n  doLogin() {\n    this.user = { name: 'Jane Doe' };\n  }\n\n  doCreateAccount() {\n    this.user = { name: 'Jane Doe' };\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "section {\n  font-family: \"Nunito Sans\", \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 24px;\n  padding: 48px 20px;\n  margin: 0 auto;\n  max-width: 600px;\n  color: #333;\n}\n\nsection h2 {\n  font-weight: 900;\n  font-size: 32px;\n  line-height: 1;\n  margin: 0 0 4px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nsection p {\n  margin: 1em 0;\n}\n\nsection a {\n  text-decoration: none;\n  color: #1ea7fd;\n}\n\nsection ul {\n  padding-left: 30px;\n  margin: 1em 0;\n}\n\nsection li {\n  margin-bottom: 8px;\n}\n\nsection .tip {\n  display: inline-block;\n  border-radius: 1em;\n  font-size: 11px;\n  line-height: 12px;\n  font-weight: 700;\n  background: #e7fdd8;\n  color: #66bf3c;\n  padding: 4px 12px;\n  margin-right: 10px;\n  vertical-align: top;\n}\n\nsection .tip-wrapper {\n  font-size: 13px;\n  line-height: 20px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n}\n\nsection .tip-wrapper svg {\n  display: inline-block;\n  height: 12px;\n  width: 12px;\n  margin-right: 4px;\n  vertical-align: top;\n  margin-top: 3px;\n}\n\nsection .tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "PayrollItemCardComponent",
            "id": "component-PayrollItemCardComponent-7d55f513250d8a2dd36725bf29e9ad3034dd64f7e4bbebb51afe3c9736f3c33d8f63e771361a278c5bfd68b0f2b8800b9b9675df22ddec528daf0b31798cf2e2",
            "file": "src/app/trainer/payroll/payroll-overview/payroll-item-card/payroll-item-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "fit4bit-payroll-item-card",
            "styleUrls": [
                "./payroll-item-card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./payroll-item-card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "payroll",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "PayrollDto",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "loadItemClicked",
                    "defaultValue": "new EventEmitter<PayrollDto>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "EventEmitter<PayrollDto>"
                },
                {
                    "name": "submitPayroll",
                    "defaultValue": "new EventEmitter<PayrollDto>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "EventEmitter<PayrollDto>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "loadOverview",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "sendPayroll",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { PayrollDto } from '../../../../commons/dto/payroll-dto.model';\nimport { PayrollService } from '../../../../commons/service/payroll.service';\n\n@Component({\n  selector: 'fit4bit-payroll-item-card',\n  templateUrl: './payroll-item-card.component.html',\n  styleUrls: ['./payroll-item-card.component.scss'],\n})\nexport class PayrollItemCardComponent implements OnInit {\n  @Input()\n  public payroll: PayrollDto;\n\n  @Output()\n  public loadItemClicked: EventEmitter<PayrollDto> = new EventEmitter<PayrollDto>();\n\n  @Output()\n  public submitPayroll: EventEmitter<PayrollDto> = new EventEmitter<PayrollDto>();\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  public loadOverview() {\n    this.loadItemClicked.emit(this.payroll);\n  }\n\n  public sendPayroll() {\n    this.submitPayroll.emit(this.payroll);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"breakpoints\";\n.detail {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  justify-content: space-between;\n}\n\n.detail-head {\n  font-weight: bold;\n}\n\n.buttons {\n  display: flex;\n  flex-direction: row;\n  margin-bottom: 20px;\n  justify-content: space-between;\n  @include mobile {\n    flex-direction: column;\n  }\n}\nbutton:first-child {\n  @include mobile {\n    margin-bottom: 5px;\n  }\n}\n",
                    "styleUrl": "./payroll-item-card.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 18
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<fit4bit-base-item-card>\n  <div class=\"detail\">\n    <div class=\"detail-head\">{{ payroll.month }} {{ payroll.year }}</div>\n    <div>Status {{ payroll.billState }}</div>\n    <div>\n      <div class=\"buttons\">\n        <button\n          mat-stroked-button\n          color=\"primary\"\n          (click)=\"loadOverview()\"\n          [disabled]=\"payroll.billState !== 'OFFEN'\"\n        >\n          Trainings hinzufügen\n        </button>\n\n        <button\n          mat-stroked-button\n          color=\"primary\"\n          (click)=\"sendPayroll()\"\n          [disabled]=\"payroll.billState !== 'OFFEN'\"\n        >\n          Lohnblatt senden\n        </button>\n      </div>\n    </div>\n  </div>\n</fit4bit-base-item-card>\n"
        },
        {
            "name": "PayrollListComponent",
            "id": "component-PayrollListComponent-a665093d600a52533fad044e524659c5bfd3f0be8bd24806cb57ec3f7d17542a8850d0e1736fbb75d675d6034e381df7c848562f2e9e0363346ffceebf40b7ae",
            "file": "src/app/trainer/payroll/payroll-overview/payroll-list/payroll-list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "fit4bit-payroll-list",
            "styleUrls": [
                "./payroll-list.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./payroll-list.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "selectedPayroll",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "PayrollDto",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "openTrainings",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<TrainingDto[]>",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "selectedTrainings",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<TrainingDto[]>",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "allOwnTrainings",
                    "args": [],
                    "optional": false,
                    "returnType": "TrainingDto[]",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { TrainingDto } from 'src/app/commons/dto/training-dto.model';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { TrainingService } from 'src/app/commons/service/training.service';\nimport { CardItemService } from 'src/app/trainer/payroll/payroll-overview/card-item.service';\nimport { PayrollDto } from '../../../../commons/dto/payroll-dto.model';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'fit4bit-payroll-list',\n  templateUrl: './payroll-list.component.html',\n  styleUrls: ['./payroll-list.component.scss'],\n})\nexport class PayrollListComponent implements OnInit {\n  @Input()\n  public selectedPayroll: PayrollDto;\n\n  public selectedTrainings: Observable<TrainingDto[]>;\n  public openTrainings: Observable<TrainingDto[]>;\n\n  constructor(\n    private trainingService: TrainingService,\n    private cardItemService: CardItemService\n  ) {}\n\n  ngOnInit(): void {\n    this.selectedTrainings = this.trainingService.getAllTrainingInPayroll$(\n      this.selectedPayroll.id!\n    );\n    this.openTrainings = this.trainingService.getAllOwnOpenTrainings$();\n  }\n\n  public allOwnTrainings(): TrainingDto[] {\n    return this.cardItemService.trainings;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./payroll-list.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "trainingService",
                        "type": "TrainingService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cardItemService",
                        "type": "CardItemService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "trainingService",
                        "type": "TrainingService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cardItemService",
                        "type": "CardItemService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div *ngFor=\"let training of selectedTrainings | async\">\n  <fit4bit-checkbox-card\n    [trainingDto]=\"training\"\n    [active]=\"true\"\n  ></fit4bit-checkbox-card>\n</div>\n\n<div *ngFor=\"let training of openTrainings | async\">\n  <fit4bit-checkbox-card [trainingDto]=\"training\"></fit4bit-checkbox-card>\n</div>\n"
        },
        {
            "name": "PayrollOverviewComponent",
            "id": "component-PayrollOverviewComponent-4509c1caeb8d31e9f698f11d1ebd92868e85d365a52f48271182a0ffb7034291dbbf5d6c095a4046fc427145350f1eaa134a77e9439a0613e59cbed0f429b199",
            "file": "src/app/trainer/payroll/payroll-overview/payroll-overview.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "fit4bit-payroll-overview",
            "styleUrls": [
                "./payroll-overview.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./payroll-overview.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "filteredList",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PayrollDto[]",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "filterOffeneTraining",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "formInOverlayValid",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "lengthOfOpenPayrolls",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "newpayrollComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NewpayrollComponent",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "NewpayrollComponent"
                        }
                    ]
                },
                {
                    "name": "payrollList",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PayrollDto[]",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "selectedPayroll",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PayrollDto",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "showFilter",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "showNewPayrollForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "showPayrollList",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "addTrainingsToPayroll",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "checkValidation",
                    "args": [
                        {
                            "name": "$event",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 112,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "createPayroll",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 116,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "initData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "loadItem",
                    "args": [
                        {
                            "name": "payroll",
                            "type": "PayrollDto",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "payroll",
                            "type": "PayrollDto",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "loadNewPayrollForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "resetOverlay",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "stateFiler",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 100,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "submitPayroll",
                    "args": [
                        {
                            "name": "payroll",
                            "type": "PayrollDto",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 88,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "payroll",
                            "type": "PayrollDto",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { PayrollDto } from '../../../commons/dto/payroll-dto.model';\r\nimport {Component, OnInit, ViewChild} from '@angular/core';\r\nimport { PayrollService } from 'src/app/commons/service/payroll.service';\r\nimport { CardItemService } from 'src/app/trainer/payroll/payroll-overview/card-item.service';\r\nimport { PayrollAddTrainingDto } from 'src/app/commons/dto/payroll-add-training-dto';\r\nimport { SnackbarService } from '../../../commons/service/snackbar.service';\r\nimport {NewpayrollComponent} from \"../create-payroll/newpayroll.component\";\r\n\r\n@Component({\r\n  selector: 'fit4bit-payroll-overview',\r\n  templateUrl: './payroll-overview.component.html',\r\n  styleUrls: ['./payroll-overview.component.scss'],\r\n})\r\nexport class PayrollOverviewComponent implements OnInit {\r\n  public payrollList: PayrollDto[] = [];\r\n  public filteredList: PayrollDto[] = [];\r\n  public filterOffeneTraining = false;\r\n  public selectedPayroll: PayrollDto;\r\n  public showPayrollList: boolean;\r\n  public showNewPayrollForm: boolean;\r\n  public title: string;\r\n  public lengthOfOpenPayrolls: number;\r\n  public formInOverlayValid:boolean;\r\n  public showFilter=false;\r\n\r\n  @ViewChild(NewpayrollComponent) newpayrollComponent:NewpayrollComponent;\r\n\r\n  constructor(\r\n    private payrollService: PayrollService,\r\n    private cardItemService: CardItemService,\r\n    private snackbarService: SnackbarService,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.initData();\r\n    this.filteredList = this.payrollList;\r\n  }\r\n\r\n  private initData(): void {\r\n    this.payrollService.getAll$().subscribe((payrollList) => {\r\n      this.payrollList = payrollList;\r\n      this.filteredList = payrollList;\r\n      this.lengthOfOpenPayrolls = payrollList.filter(\r\n        (value) => value.billState === 'OFFEN'\r\n      ).length;\r\n    });\r\n  }\r\n\r\n  public resetOverlay(): void {\r\n    this.showPayrollList = false;\r\n    this.showNewPayrollForm = false;\r\n  }\r\n\r\n  public loadItem(payroll: PayrollDto): void {\r\n    this.selectedPayroll = payroll;\r\n    this.showPayrollList = true;\r\n    this.title = `${payroll.month}  ${payroll.year}`;\r\n  }\r\n\r\n  public loadNewPayrollForm(): void {\r\n    this.title = 'Neues Stundenblatt anlegen';\r\n    this.showNewPayrollForm = true;\r\n  }\r\n\r\n  public addTrainingsToPayroll(): void {\r\n    let listOfId: number[] = [];\r\n    this.cardItemService.clickedElements.forEach((training) =>\r\n      listOfId.push(training.id!)\r\n    );\r\n\r\n    let payrollToAddTrainings: PayrollAddTrainingDto = {\r\n      id: this.selectedPayroll.id!,\r\n      trainingIds: listOfId,\r\n    };\r\n    this.payrollService.addTrainings$(payrollToAddTrainings).subscribe(\r\n      () => {\r\n        this.snackbarService.sendDataSaveOk();\r\n      },\r\n      () => {\r\n        this.snackbarService.sendStandardNok();\r\n      }\r\n    );\r\n\r\n    this.showPayrollList = false;\r\n    this.cardItemService.clear();\r\n  }\r\n\r\n  public submitPayroll(payroll: PayrollDto): void {\r\n    this.payrollService.submitPayroll$(payroll).subscribe(\r\n      () => {\r\n        this.snackbarService.sendDataSaveOk();\r\n      },\r\n      () => {\r\n        this.snackbarService.sendStandardNok();\r\n      }\r\n    );\r\n    this.initData();\r\n  }\r\n\r\n  public stateFiler(): void {\r\n    this.filterOffeneTraining = !this.filterOffeneTraining;\r\n    if (this.filterOffeneTraining) {\r\n      this.filteredList = [];\r\n      this.payrollList.forEach((value) => {\r\n        if (value.billState === 'OFFEN') {\r\n          this.filteredList.push(value);\r\n        }\r\n      });\r\n    } else this.filteredList = this.payrollList;\r\n  }\r\n\r\n  public checkValidation($event: boolean) {\r\n    this.formInOverlayValid=$event.valueOf();\r\n  }\r\n\r\n  public createPayroll():void {\r\n    this.newpayrollComponent.create();\r\n    this.resetOverlay();\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "\r\n.cursor {\r\n  cursor: pointer;\r\n}\r\n\r\n.cards {\r\n  display: flex;\r\n  flex-direction: row;\r\n  width: 100%;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.chips-container {\r\n  display: flex;\r\n  flex-direction: row;\r\n}\r\n\r\nfit4bit-chips {\r\n  margin-left: 20px;\r\n}\r\n\r\n.filter-container {\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  margin-left: 20px;\r\n}\r\n",
                    "styleUrl": "./payroll-overview.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "payrollService",
                        "type": "PayrollService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cardItemService",
                        "type": "CardItemService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "snackbarService",
                        "type": "SnackbarService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 26,
                "jsdoctags": [
                    {
                        "name": "payrollService",
                        "type": "PayrollService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cardItemService",
                        "type": "CardItemService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "snackbarService",
                        "type": "SnackbarService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<fit4bit-main-content-container [title]=\"'Lohnabrechnungs Übersicht'\">\r\n\r\n  <div class=\"filter-container\" *ngIf=\"showFilter\">\r\n    <h2>Filter:</h2>\r\n    <div class=\"chips-container\">\r\n      <fit4bit-chips\r\n        [isActive]=\"filterOffeneTraining\"\r\n        [text]=\"'Offene'\"\r\n        [length]=\"lengthOfOpenPayrolls\"\r\n        (click)=\"stateFiler()\"\r\n      ></fit4bit-chips>\r\n    </div>\r\n  </div>\r\n  <fit4bit-overlay\r\n    [show]=\"showPayrollList\"\r\n    [title]=\"title\"\r\n    (resetOverlayEmitter)=\"resetOverlay()\"\r\n\r\n  >\r\n\r\n    <fit4bit-payroll-list\r\n      *ngIf=\"showPayrollList\"\r\n      [selectedPayroll]=\"selectedPayroll\"\r\n    ></fit4bit-payroll-list>\r\n\r\n    <div action *ngIf=\"showPayrollList\">\r\n      <fit4bit-button\r\n        (click)=\"addTrainingsToPayroll()\"\r\n        [name]=\"'Auswahl speichern'\"\r\n      ></fit4bit-button>\r\n    </div>\r\n\r\n  </fit4bit-overlay>\r\n  <fit4bit-overlay\r\n    [show]=\"showNewPayrollForm\"\r\n    [title]=\"title\"\r\n    (resetOverlayEmitter)=\"resetOverlay()\"\r\n  >\r\n    <fit4bit-newpayroll (validEmitter)=\"checkValidation($event)\"></fit4bit-newpayroll>\r\n    <div action *ngIf=\"showNewPayrollForm\">\r\n      <fit4bit-button\r\n        [name]=\"'Erstellen'\"\r\n        [disabled]=\"!formInOverlayValid\"\r\n        (click)=\"createPayroll()\"\r\n      ></fit4bit-button>\r\n    </div>\r\n\r\n  </fit4bit-overlay>\r\n\r\n  <fit4bit-bubble>\r\n    <div add (click)=\"loadNewPayrollForm()\">\r\n      <mat-icon>add</mat-icon>\r\n    </div>\r\n    <div filter (click)=\"showFilter=!showFilter\">\r\n      <mat-icon>filter_list</mat-icon>\r\n    </div>\r\n  </fit4bit-bubble>\r\n</fit4bit-main-content-container>\r\n\r\n<div class=\"cards\">\r\n  <div *ngFor=\"let payroll of filteredList\">\r\n    <fit4bit-payroll-item-card\r\n      [payroll]=\"payroll\"\r\n      (loadItemClicked)=\"loadItem(payroll)\"\r\n      (submitPayroll)=\"submitPayroll(payroll)\"\r\n    >\r\n    </fit4bit-payroll-item-card>\r\n  </div>\r\n</div>\r\n\r\n\r\n"
        },
        {
            "name": "RoomComponent",
            "id": "component-RoomComponent-83cc1034aaecada0146fdb25c0457afe51f03d6a8e7816f959e2c0986f117774b60d7e81367e392ba5fe6aca722672fd352244f97f7d57b4e35f4de3b9b4fd02",
            "file": "src/app/superior/pages/room/room.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "fit4bit-room",
            "styleUrls": [
                "./room.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./room.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "file",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "File",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "formGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "create",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onFileSelected",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { RoomDto } from '../../../commons/dto/room-dto.model';\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { RoomService } from 'src/app/commons/service/room.service';\n\n@Component({\n  selector: 'fit4bit-room',\n  templateUrl: './room.component.html',\n  styleUrls: ['./room.component.scss'],\n})\nexport class RoomComponent implements OnInit {\n  formGroup: FormGroup;\n  file: File;\n\n  constructor(private roomService: RoomService) {}\n\n  ngOnInit(): void {\n    this.formGroup = new FormGroup({\n      name: new FormControl('', [Validators.required]),\n    });\n  }\n\n  onFileSelected(event: any) {\n    this.file = event.target.files[0];\n  }\n\n  create(): void {\n    const newRoom: RoomDto = this.formGroup.value;\n    this.roomService.create$(newRoom).subscribe();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".file-input {\n  display: none;\n}\n",
                    "styleUrl": "./room.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "roomService",
                        "type": "RoomService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "roomService",
                        "type": "RoomService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<fit4bit-main-content-container [title]=\"'Neuer Raum erstellen'\">\n  <section>\n    <form\n      fxLayout=\"column\"\n      fxLayoutAlign=\"center center\"\n      [formGroup]=\"formGroup\"\n      (ngSubmit)=\"create()\"\n    >\n      <mat-form-field>\n        <mat-label for=\"name\">Raumname</mat-label>\n        <input id=\"name\" matInput type=\"text\" formControlName=\"name\" />\n      </mat-form-field>\n\n      <button\n        mat-raised-button\n        color=\"primary\"\n        type=\"submit\"\n        [disabled]=\"!formGroup.valid\"\n      >\n        Speichern\n      </button>\n    </form>\n  </section>\n</fit4bit-main-content-container>\n"
        },
        {
            "name": "SideNavigationComponent",
            "id": "component-SideNavigationComponent-ff35769051868d21c7da09dcdeb1e50279502e874e6ef1948a687515fd68e52e58d28ffffa37e9b3a0ac8384c648e6e6574008c7d9287ae6f500b19df8852b74",
            "file": "src/app/navigation/side-navigation/side-navigation.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "fit4bit-side-navigation",
            "styleUrls": [
                "./side-navigation.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./side-navigation.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "show",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "resetOverlayEmitter",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "EventEmitter<void>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "closeMe",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'fit4bit-side-navigation',\n  templateUrl: './side-navigation.component.html',\n  styleUrls: ['./side-navigation.component.scss'],\n})\nexport class SideNavigationComponent {\n  @Output() public resetOverlayEmitter: EventEmitter<void> = new EventEmitter();\n  @Input() public show: boolean;\n\n  public closeMe(): void {\n    this.show = false;\n    this.resetOverlayEmitter.emit();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"breakpoints\";\n@import \"spaces.scss\";\n@import \"colors.scss\";\n\n.overlay {\n  position: absolute;\n  top: 0;\n  width: 200px;\n  max-width: 100%;\n  height: 100%;\n  z-index: 4;\n  background-color: white;\n  display: flex;\n  flex-direction: column;\n  transition: left 3s ease;\n  left: -100%;\n}\n\n.left-overlay {\n  margin-bottom: $space_10;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n}\n\n.head-overlay {\n  display: flex;\n  justify-content: end;\n}\n\n.open {\n  left: 0;\n}\n",
                    "styleUrl": "./side-navigation.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<fit4bit-backdrop (closeEmitter)=\"closeMe()\"></fit4bit-backdrop>\n\n<div class=\"overlay\" [class.open]=\"show\">\n  <div class=\"head-overlay\">\n    <fit4bit-close-button (click)=\"closeMe()\"></fit4bit-close-button>\n  </div>\n\n  <div class=\"left-overlay\">\n    <fit4bit-menu-content></fit4bit-menu-content>\n  </div>\n</div>\n"
        },
        {
            "name": "SnackBarComponent",
            "id": "component-SnackBarComponent-7a8527d9da8766f84b39d67b95ff9ed698d5a7193de6ed3d0a82102e0c1082b3cda327fd1094302f4b2b812fda65948a77ee6172ae962e368acccf3d7295d678",
            "file": "src/app/commons/components/snack-bar/snack-bar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "fit4bit-snack-bar",
            "styleUrls": [
                "./snack-bar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./snack-bar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "goOpen",
                    "defaultValue": "this.snackbarService.infoSubject !== undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "infoSubject",
                    "defaultValue": "this.snackbarService.infoSubject",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<Message | undefined>",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { BehaviorSubject, Observable, Observer } from 'rxjs';\nimport { Component, OnChanges, OnInit, SimpleChanges } from '@angular/core';\nimport { SnackbarService } from '../../service/snackbar.service';\nimport { Message } from '../../models/messagebox.model';\n\n@Component({\n  selector: 'fit4bit-snack-bar',\n  templateUrl: './snack-bar.component.html',\n  styleUrls: ['./snack-bar.component.scss'],\n})\nexport class SnackBarComponent {\n  public infoSubject: BehaviorSubject<Message | undefined> =\n    this.snackbarService.infoSubject;\n\n  public goOpen: boolean = this.snackbarService.infoSubject !== undefined;\n  constructor(private snackbarService: SnackbarService) {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"breakpoints\";\ndiv {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  left: -200px;\n  width: 200px;\n  height: 50px;\n  position: absolute;\n  top: 100px;\n  transition: left 1s ease;\n  border-radius: 0 3px 3px;\n  color: white;\n\n  @include mobile {\n    transition: bottom 1s ease;\n    top: unset;\n    left: 0;\n    width: 100%;\n    bottom: -50px;\n    border-radius: 3px 3px;\n  }\n}\n\n.open {\n  left: 0;\n  @include mobile {\n    bottom: 0;\n  }\n}\n\n.info {\n  background: green;\n}\n\n.error {\n  background: red;\n}\n",
                    "styleUrl": "./snack-bar.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "snackbarService",
                        "type": "SnackbarService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "snackbarService",
                        "type": "SnackbarService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div\n  [class.open]=\"(infoSubject | async) !== undefined\"\n  [ngClass]=\"{\n    info: (infoSubject | async)?.typ === 'info',\n    error: (infoSubject | async)?.typ === 'error'\n  }\"\n>\n  {{ (infoSubject | async)?.text }}\n</div>\n"
        },
        {
            "name": "TopNavigationComponent",
            "id": "component-TopNavigationComponent-c52fff3e8cb2a94e7bb22d17adc1024d74f27ea0a555dc4980f7022fa4c0bc20f13c9d51ded2cce4bd5e85cb41d7d7cec7e905f836f0a875ad5f057838de2899",
            "file": "src/app/navigation/top-navigation/top-navigation.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-top-navigation",
            "styleUrls": [
                "./top-navigation.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./top-navigation.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "sideBarIsOpen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-top-navigation',\n  templateUrl: './top-navigation.component.html',\n  styleUrls: ['./top-navigation.component.scss'],\n})\nexport class TopNavigationComponent {\n  public sideBarIsOpen = false;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"colors.scss\";\n@import \"breakpoints\";\na {\n  text-decoration: none;\n  color: white;\n}\n\na:hover,\na:active {\n  color: lightgrey;\n}\n\n.navigation-items {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n}\n\n.head {\n  background-color: $background-color-head-primary;\n}\n\n.head p,\n.head h1 {\n  color: $text-head-color;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\nmat-icon {\n  color: white;\n}\n",
                    "styleUrl": "./top-navigation.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<fit4bit-side-navigation\n  *ngIf=\"sideBarIsOpen\"\n  [show]=\"sideBarIsOpen\"\n  (resetOverlayEmitter)=\"sideBarIsOpen = false\"\n></fit4bit-side-navigation>\n<mat-toolbar class=\"head\">\n  <div fxHide.gt-xs>\n    <button mat-icon-button>\n      <mat-icon (click)=\"sideBarIsOpen = true\">menu</mat-icon>\n    </button>\n  </div>\n  <div><a routerLink=\"/\">Go4Fit</a></div>\n  <div fxFlex fxLayout fxLayoutAlign=\"flex-end\" fxHide.xs>\n    <fit4bit-menu-content></fit4bit-menu-content>\n  </div>\n</mat-toolbar>\n"
        },
        {
            "name": "TrainingComponent",
            "id": "component-TrainingComponent-950d1b2ddb581e9a4b7b774c3a7c971e0320288438fb1d508557314553a38ee8cd811cce88d9b82e878058d4f2331754ccc15b647f912c42188c926449abe858",
            "file": "src/app/commons/pages/training/training.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "fit4bit-training",
            "styleUrls": [
                "./training.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./training.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "formGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "roomsDtoList",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "RoomDto[]",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "trainingTypList",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TrainingTypDto[]",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "userList",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UserDto[]",
                    "optional": false,
                    "description": "",
                    "line": 20
                }
            ],
            "methodsClass": [
                {
                    "name": "create",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "dateTimeConverter",
                    "args": [],
                    "optional": false,
                    "returnType": "Date",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { UserDto } from 'src/app/commons/dto/user-dto.model';\nimport { TrainingTypDto } from './../../dto/training-typ-dto.model';\nimport { TrainingTypService } from './../../../superior/service/training-typ.service';\nimport { TrainingDto } from './../../dto/training-dto.model';\nimport { TrainingService } from './../../service/training.service';\nimport { RoomDto } from './../../dto/room-dto.model';\nimport { RoomService } from './../../service/room.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl } from '@angular/forms';\nimport { UserService } from '../../service/user.service';\n\n@Component({\n  selector: 'fit4bit-training',\n  templateUrl: './training.component.html',\n  styleUrls: ['./training.component.scss'],\n})\nexport class TrainingComponent implements OnInit {\n  roomsDtoList: RoomDto[] = [];\n  trainingTypList: TrainingTypDto[] = [];\n  userList: UserDto[] = [];\n  formGroup: FormGroup;\n\n  constructor(\n    private roomService: RoomService,\n    private formBuilder: FormBuilder,\n    private trainingService: TrainingService,\n    private trainingTypService: TrainingTypService,\n    private userService: UserService\n  ) {}\n\n  ngOnInit(): void {\n    this.formGroup = this.formBuilder.group({\n      roomId: new FormControl(''),\n      trainingTypId: new FormControl(''),\n      userId: new FormControl(''),\n      duration: new FormControl(''),\n      startTime: new FormControl(''),\n      startDate: new FormControl(''),\n    });\n\n    this.roomService.getAll$().subscribe((data) => (this.roomsDtoList = data));\n\n    this.trainingTypService\n      .getAll$()\n      .subscribe((data) => (this.trainingTypList = data));\n\n    this.userService.getAll$().subscribe((users) => (this.userList = users));\n  }\n\n  create(): void {\n    const roomDto: RoomDto = {\n      id: this.formGroup.value.roomId,\n    };\n\n    const trainingTypDto: TrainingTypDto = {\n      id: this.formGroup.value.trainingTypId,\n    };\n\n    const userDto: UserDto = {\n      id: this.formGroup.value.userId,\n    };\n    const newTraining: TrainingDto = {\n      room: roomDto,\n      trainingTyp: trainingTypDto,\n      user: userDto,\n      duration: this.formGroup.value.duration,\n      runningDate: this.dateTimeConverter(),\n    };\n    this.trainingService.create$(newTraining).subscribe();\n  }\n\n  private dateTimeConverter(): Date {\n    let date: Date = this.formGroup.value.startDate;\n    let time: String = this.formGroup.value.startTime;\n    date.setHours(parseInt(time.split(':')[0]));\n    date.setMinutes(parseInt(time.split(':')[1]));\n    return date;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./training.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "roomService",
                        "type": "RoomService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "trainingService",
                        "type": "TrainingService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "trainingTypService",
                        "type": "TrainingTypService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "roomService",
                        "type": "RoomService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "trainingService",
                        "type": "TrainingService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "trainingTypService",
                        "type": "TrainingTypService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<fit4bit-main-content-container [title]=\"'Neues Training erfassen'\">\n  <form\n    fxLayout=\"column\"\n    fxLayoutAlign=\"center center\"\n    [formGroup]=\"formGroup\"\n    (ngSubmit)=\"create()\"\n    fxLayoutAlign=\"center center\"\n  >\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Raum</mat-label>\n      <mat-select formControlName=\"roomId\">\n        <mat-option *ngFor=\"let room of roomsDtoList\" [value]=\"room.id\">\n          {{ room.name }}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Typ</mat-label>\n      <mat-select formControlName=\"trainingTypId\">\n        <mat-option\n          *ngFor=\"let trainingTyp of trainingTypList\"\n          [value]=\"trainingTyp.id\"\n        >\n          {{ trainingTyp.name }}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Trainer</mat-label>\n      <mat-select formControlName=\"userId\">\n        <mat-option *ngFor=\"let user of userList\" [value]=\"user.id\">\n          {{ user.firstName }} {{ user.email }}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Dauer [min]</mat-label>\n      <input\n        matInput\n        placeholder=\"Minuten\"\n        type=\"number\"\n        formControlName=\"duration\"\n      />\n    </mat-form-field>\n\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Datum</mat-label>\n      <input matInput [matDatepicker]=\"picker\" formControlName=\"startDate\" />\n      <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n      <mat-datepicker #picker></mat-datepicker>\n    </mat-form-field>\n\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Startzeit</mat-label>\n      <input\n        matInput\n        placeholder=\"Start Zeit\"\n        type=\"string\"\n        formControlName=\"startTime\"\n      />\n    </mat-form-field>\n\n    <button\n      mat-raised-button\n      color=\"primary\"\n      type=\"submit\"\n      [disabled]=\"!formGroup.valid\"\n    >\n      Speichern\n    </button>\n  </form>\n</fit4bit-main-content-container>\n"
        },
        {
            "name": "TrainingItemCardComponent",
            "id": "component-TrainingItemCardComponent-1daad60b9e7dbe6f901a6a12a182afd3777d224f111e4eb650965f572b5fa92bd57b617373b31a19537a2401cf05a068f7f9b4fe1c876e798861a33f42269618",
            "file": "src/app/trainer/training/training-overview/training-item-card/training-item-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "fit4bit-training-item-card",
            "styleUrls": [
                "./training-item-card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./training-item-card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "training",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "TrainingDto",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "profileForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "save",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport { TrainingDto } from '../../../../commons/dto/training-dto.model';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { TrainingService } from '../../../../commons/service/training.service';\nimport { SnackbarService } from '../../../../commons/service/snackbar.service';\n\n@Component({\n  selector: 'fit4bit-training-item-card',\n  templateUrl: './training-item-card.component.html',\n  styleUrls: ['./training-item-card.component.scss'],\n})\nexport class TrainingItemCardComponent implements OnInit {\n  public profileForm: FormGroup;\n\n  @Input()\n  public training: TrainingDto;\n\n  constructor(\n    private trainingService: TrainingService,\n    private snackbar: SnackbarService\n  ) {}\n\n  ngOnInit(): void {\n    this.profileForm = new FormGroup({\n      amountOfCustomer: new FormControl(),\n    });\n    this.profileForm.setValue({\n      amountOfCustomer: this.training.amountOfCustomer,\n    });\n  }\n\n  public save(): void {\n    this.training.amountOfCustomer = this.profileForm.value.amountOfCustomer;\n    this.trainingService.patch$(this.training).subscribe(\n      () => {\n        this.snackbar.sendDataSaveOk();\n        this.profileForm.setValue({\n          amountOfCustomer: this.training.amountOfCustomer,\n        });\n      },\n      () => {\n        this.snackbar.sendStandardNok();\n      }\n    );\n    this.profileForm.reset();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"breakpoints\";\n\n.detail-container {\n  display: flex;\n  flex-direction: row;\n  @include mobile {\n    flex-direction: column;\n  }\n}\n.card-details {\n  display: flex;\n  flex-direction: column;\n  margin: 5px 20px 0 10px;\n}\n\n.detail-line {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n}\n\n.input-field {\n  display: flex;\n  flex-direction: column;\n  margin-top: 5px;\n  margin-left: 5px;\n}\n\nform > button {\n  margin-left: 15px;\n}\n.card-title {\n  font-weight: bold;\n  margin-bottom: 10px;\n}\n\nmat-icon {\n  margin-right: 5px;\n}\n",
                    "styleUrl": "./training-item-card.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "trainingService",
                        "type": "TrainingService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "snackbar",
                        "type": "SnackbarService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "trainingService",
                        "type": "TrainingService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "snackbar",
                        "type": "SnackbarService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<fit4bit-base-item-card>\n  <div class=\"detail-container\">\n    <div class=\"card-details\">\n      <div class=\"card-title\">{{ training?.trainingTyp?.name }}</div>\n      <div class=\"detail-line\">\n        <div><mat-icon>calendar_today</mat-icon></div>\n        <div>{{ training?.runningDate | date: \"dd.MM.yyyy\" }}</div>\n      </div>\n      <div class=\"detail-line\">\n        <div><mat-icon>watch_later</mat-icon></div>\n        <div>{{ training?.runningDate | date: \"HH.mm\" }}</div>\n      </div>\n      <div fxHide.lt-sm>Raum: {{ training?.room?.name }}</div>\n    </div>\n\n    <form [formGroup]=\"profileForm\" (ngSubmit)=\"save()\">\n      <div class=\"input-field\">\n        <mat-form-field>\n          <mat-label for=\"amountOfCustomer\">Anzahl Kunden erfassen</mat-label>\n          <input\n            id=\"amountOfCustomer\"\n            matInput\n            type=\"text\"\n            formControlName=\"amountOfCustomer\"\n          />\n        </mat-form-field>\n        <button\n          mat-stroked-button\n          color=\"primary\"\n          type=\"submit\"\n          [disabled]=\"!profileForm.dirty\"\n        >\n          Speichern\n        </button>\n      </div>\n    </form>\n  </div>\n</fit4bit-base-item-card>\n"
        },
        {
            "name": "TrainingOverviewComponent",
            "id": "component-TrainingOverviewComponent-50e7a2d9e2910b4a0efaca4edfb73cb44fce42d7d93bee226e834666ab89d390398a3729832da990daff15ad59276184ebb324f7c6ecf3e0c7696b3443b68973",
            "file": "src/app/trainer/training/training-overview/training-overview.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "fit4bit-training-overview",
            "styleUrls": [
                "./training-overview.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./training-overview.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "showOverlay",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "training",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TrainingDto",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "trainings",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TrainingDto[]",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "loadItem",
                    "args": [
                        {
                            "name": "training",
                            "type": "TrainingDto",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "training",
                            "type": "TrainingDto",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "resetOverlay",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { TrainingDto } from 'src/app/commons/dto/training-dto.model';\nimport { Component, OnInit } from '@angular/core';\nimport { TrainingService } from 'src/app/commons/service/training.service';\n\n@Component({\n  selector: 'fit4bit-training-overview',\n  templateUrl: './training-overview.component.html',\n  styleUrls: ['./training-overview.component.scss'],\n})\nexport class TrainingOverviewComponent implements OnInit {\n  public showOverlay: boolean;\n  public training: TrainingDto;\n  public trainings: TrainingDto[];\n\n  constructor(private trainingService: TrainingService) {}\n\n  ngOnInit(): void {\n    this.trainingService\n      .getAllOwnTraining$()\n      .subscribe((trainings) => (this.trainings = trainings));\n  }\n\n  public loadItem(training: TrainingDto): void {\n    console.log('training: ' + training.id);\n    this.training = training;\n    this.showOverlay = true;\n  }\n\n  public resetOverlay(): void {\n    this.showOverlay = false;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"breakpoints\";\n\np {\n  font-size: 10px;\n\n  @include mobile {\n    font-size: 30px;\n  }\n}\n\n.training-card {\n  max-width: 500px;\n  margin-bottom: 8px;\n}\n\nfit4bit-training-item-card {\n  margin-bottom: 10px;\n}\n\n.cards {\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  flex-wrap: wrap;\n}\n",
                    "styleUrl": "./training-overview.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "trainingService",
                        "type": "TrainingService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "trainingService",
                        "type": "TrainingService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<fit4bit-main-content-container [title]=\"'Meine Trainings Übersicht'\">\n  <fit4bit-overlay\n    [show]=\"showOverlay\"\n    [title]=\"'Anzahl Kunden erfassen'\"\n    (resetOverlayEmitter)=\"resetOverlay()\"\n  >\n  </fit4bit-overlay>\n  <div class=\"cards\">\n    <div *ngFor=\"let t of trainings\">\n      <fit4bit-training-item-card [training]=\"t\"></fit4bit-training-item-card>\n    </div>\n  </div>\n</fit4bit-main-content-container>\n"
        },
        {
            "name": "WelcomePageComponent",
            "id": "component-WelcomePageComponent-ebacfc15b011e0230430a8580a25a682f66b05f2a7421c9e197051f12ab8d504995b595a905a9917ac269781cf471bf4d4ccfb1a7ec73b2be4fa268de1052549",
            "file": "src/app/commons/pages/welcome-page/welcome-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "fit4bit-welcome-page",
            "styleUrls": [
                "./welcome-page.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./welcome-page.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'fit4bit-welcome-page',\n  templateUrl: './welcome-page.component.html',\n  styleUrls: ['./welcome-page.component.scss'],\n})\nexport class WelcomePageComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./welcome-page.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<fit4bit-main-content-container [title]=\"'Willkommen!'\">\n</fit4bit-main-content-container>\n"
        }
    ],
    "modules": [
        {
            "name": "AdminModule",
            "id": "module-AdminModule-d2ecbc304ec5590d860c08d461af252e47f7cb79d50e86e1176f4df0ead1c9289937cab38c3f220664757325edd84418fa443379e16bf46ac7829af00a5eb196",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/admin/admin.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule],\n})\nexport class AdminModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppModule",
            "id": "module-AppModule-ef4e6a573d1bd617c4fbb6957cf94c69dedfceeaf10933ba62a4da93e304315c564b8b3620f5450d3c597338498cedc8b70cce7a2b4e0ec98ceeeb4ee3e18b9f",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from './material/material.module';\nimport { Fit4BitCommonsModule } from './commons/commons.module';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { TopNavigationComponent } from './navigation/top-navigation/top-navigation.component';\nimport { AuthService } from './commons/service/auth.service';\nimport { JwtIntercepterService } from './commons/intercepters/jwt-intercepter.service';\nimport { HasRoleDirective } from './utils/has-role.directive';\nimport { SideNavigationComponent } from './navigation/side-navigation/side-navigation.component';\nimport { MenuContentComponent } from './navigation/menu-content/menu-content.component';\n@NgModule({\n  declarations: [\n    AppComponent,\n    TopNavigationComponent,\n    HasRoleDirective,\n    SideNavigationComponent,\n    MenuContentComponent,\n  ],\n  imports: [\n    HttpClientModule,\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    Fit4BitCommonsModule,\n    MatToolbarModule,\n  ],\n  exports: [HasRoleDirective],\n  providers: [\n    AuthService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: JwtIntercepterService,\n      multi: true,\n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "AuthService"
                        },
                        {
                            "name": "JwtIntercepterService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "HasRoleDirective"
                        },
                        {
                            "name": "MenuContentComponent"
                        },
                        {
                            "name": "SideNavigationComponent"
                        },
                        {
                            "name": "TopNavigationComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "Fit4BitCommonsModule"
                        },
                        {
                            "name": "MaterialModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "HasRoleDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-dfcc92b57ef62dfb52793be175ecaa9de7529554140565008bff8e8bef0a1d4e818f7f43bddf7b358f0ec11d7166e7fbc50ac38c035dfea1b881da0485803523",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './commons/pages/login/login.component';\nimport { WelcomePageComponent } from './commons/pages/welcome-page/welcome-page.component';\n\nconst routes: Routes = [\n  {\n    path: 'trainer',\n    loadChildren: () =>\n      \"import('./trainer/trainer.module').then((m) => m.TrainerModule)\",\n  },\n  {\n    path: 'superior',\n    loadChildren: () =>\n      \"import('./superior/superior.module').then((m) => m.SuperiorModule)\",\n  },\n  {\n    path: 'login',\n    component: LoginComponent,\n  },\n  {\n    path: 'welcome',\n    component: WelcomePageComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "Fit4BitCommonsModule",
            "id": "module-Fit4BitCommonsModule-573f31904c325be9a28b250d7ccf22cc472a092614e55f44b5d1c3c1688bfdccfbbe24511b2c809bde139410c18227ed713a9f10f6280652c14b853cd29c86be",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/commons/commons.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BlankSlateInformationComponent } from './blank-slate-information/blank-slate-information.component';\r\nimport { MaterialModule } from '../material/material.module';\r\nimport { Fit4bitCloseButtonComponent } from './components/fit4bit-close-button/fit4bit-close-button.component';\r\nimport { LoaderComponent } from './loader/loader.component';\r\nimport { OverlayComponent } from './components/overlay/overlay.component';\r\nimport { BackdropComponent } from './components/backdrop/backdrop.component';\r\nimport { CheckboxCardComponent } from './components/checkbox-card/card.component';\r\nimport { ButtonComponent } from './components/button/button.component';\r\nimport { ImageUploaderComponent } from './pages/image-uploader/image-uploader.component';\r\nimport { MainContentContainerComponent } from './shared/main-content-container/main-content-container.component';\r\nimport { LoginComponent } from './pages/login/login.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { WelcomePageComponent } from './pages/welcome-page/welcome-page.component';\r\nimport { SnackBarComponent } from './components/snack-bar/snack-bar.component';\r\nimport { BaseItemCardComponent } from './components/base-item-card/base-item-card.component';\r\nimport { ChipsComponent } from './components/chips/chips.component';\r\nimport { BubbleComponent } from './components/bubble/bubble.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    BlankSlateInformationComponent,\r\n    Fit4bitCloseButtonComponent,\r\n    LoaderComponent,\r\n    OverlayComponent,\r\n    BackdropComponent,\r\n    CheckboxCardComponent,\r\n    ButtonComponent,\r\n    ImageUploaderComponent,\r\n    MainContentContainerComponent,\r\n    LoginComponent,\r\n    WelcomePageComponent,\r\n    SnackBarComponent,\r\n    BaseItemCardComponent,\r\n    ChipsComponent,\r\n    BubbleComponent,\r\n  ],\r\n  imports: [CommonModule, MaterialModule, ReactiveFormsModule],\r\n\r\n    exports: [\r\n        BlankSlateInformationComponent,\r\n        LoaderComponent,\r\n        OverlayComponent,\r\n        BackdropComponent,\r\n        CheckboxCardComponent,\r\n        ButtonComponent,\r\n        MainContentContainerComponent,\r\n        SnackBarComponent,\r\n        Fit4bitCloseButtonComponent,\r\n        BaseItemCardComponent,\r\n        ChipsComponent,\r\n        BubbleComponent,\r\n    ],\r\n})\r\nexport class Fit4BitCommonsModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "BackdropComponent"
                        },
                        {
                            "name": "BaseItemCardComponent"
                        },
                        {
                            "name": "BlankSlateInformationComponent"
                        },
                        {
                            "name": "BubbleComponent"
                        },
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "CheckboxCardComponent"
                        },
                        {
                            "name": "ChipsComponent"
                        },
                        {
                            "name": "Fit4bitCloseButtonComponent"
                        },
                        {
                            "name": "ImageUploaderComponent"
                        },
                        {
                            "name": "LoaderComponent"
                        },
                        {
                            "name": "LoginComponent"
                        },
                        {
                            "name": "MainContentContainerComponent"
                        },
                        {
                            "name": "OverlayComponent"
                        },
                        {
                            "name": "SnackBarComponent"
                        },
                        {
                            "name": "WelcomePageComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "MaterialModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "BackdropComponent"
                        },
                        {
                            "name": "BaseItemCardComponent"
                        },
                        {
                            "name": "BlankSlateInformationComponent"
                        },
                        {
                            "name": "BubbleComponent"
                        },
                        {
                            "name": "CheckboxCardComponent"
                        },
                        {
                            "name": "ChipsComponent"
                        },
                        {
                            "name": "Fit4bitCloseButtonComponent"
                        },
                        {
                            "name": "LoaderComponent"
                        },
                        {
                            "name": "MainContentContainerComponent"
                        },
                        {
                            "name": "OverlayComponent"
                        },
                        {
                            "name": "SnackBarComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "MaterialModule",
            "id": "module-MaterialModule-1794643d8a698323883bd3b2fddcde4c1af3cdab1205186222ff77054499b1d7bc99061870d95299d93026204aba788d267982c2323eca9c605e5b35e58fc763",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/material/material.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatBadgeModule } from '@angular/material/badge';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatIconModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    FlexLayoutModule,\n    MatProgressSpinnerModule,\n    MatSelectModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatTableModule,\n  ],\n  exports: [\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatIconModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    FlexLayoutModule,\n    MatProgressSpinnerModule,\n    MatSelectModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatTableModule,\n    MatBadgeModule,\n  ],\n})\nexport class MaterialModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SuperiorModule",
            "id": "module-SuperiorModule-df89a942b2083fd96dc8e142fde608c7e0cbf4b2d89830799fbae4b5698fef9eaad4a8c858737a0041507cccb9ffc56c434c56f0b19c97c433967afbe18fa050",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/superior/superior.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NewUserComponent } from './pages/new-user/new-user.component';\nimport { SuperiorRoutingModule } from './superior-routing.module';\nimport { MaterialModule } from '../material/material.module';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { TrainingComponent } from '../commons/pages/training/training.component';\nimport { NewTraininTypComponent } from './pages/new-trainin-typ/new-trainin-typ.component';\nimport { RoomComponent } from './pages/room/room.component';\nimport { Fit4BitCommonsModule } from '../commons/commons.module';\nimport { AuthGuardSuperior } from '../commons/guards/superior-guard';\n\n@NgModule({\n  declarations: [\n    NewUserComponent,\n    TrainingComponent,\n    NewTraininTypComponent,\n    RoomComponent,\n  ],\n  imports: [\n    CommonModule,\n    SuperiorRoutingModule,\n    MaterialModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    Fit4BitCommonsModule,\n  ],\n  exports: [NewUserComponent, TrainingComponent, NewTraininTypComponent],\n  providers: [AuthGuardSuperior],\n})\nexport class SuperiorModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "NewTraininTypComponent"
                        },
                        {
                            "name": "NewUserComponent"
                        },
                        {
                            "name": "RoomComponent"
                        },
                        {
                            "name": "TrainingComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "Fit4BitCommonsModule"
                        },
                        {
                            "name": "MaterialModule"
                        },
                        {
                            "name": "SuperiorRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "NewTraininTypComponent"
                        },
                        {
                            "name": "NewUserComponent"
                        },
                        {
                            "name": "TrainingComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SuperiorRoutingModule",
            "id": "module-SuperiorRoutingModule-1448c1c4c5a95ab7699cde019991cf649eb45309f58d3c73cb8840b1e7eee86c04f27b2f8e6da20f2ec4c5e65c120ee6c0f011840cd77542a96249902c0b4fa8",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/superior/superior-routing.module.ts",
            "methods": [],
            "sourceCode": "import { RoomComponent } from './pages/room/room.component';\nimport { TrainingComponent } from '../commons/pages/training/training.component';\nimport { NewTraininTypComponent } from './pages/new-trainin-typ/new-trainin-typ.component';\nimport { NewUserComponent } from './pages/new-user/new-user.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthGuardSuperior } from '../commons/guards/superior-guard';\n\nconst routes: Routes = [\n  {\n    path: 'newuser',\n    component: NewUserComponent,\n  },\n  {\n    path: 'newtrainingtyp',\n    component: NewTraininTypComponent,\n  },\n  {\n    path: 'newtraining',\n    component: TrainingComponent,\n  },\n  {\n    path: 'room',\n    component: RoomComponent,\n    canActivate: [AuthGuardSuperior],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SuperiorRoutingModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "TrainerModule",
            "id": "module-TrainerModule-842626192b37e499b82d90ad0ce7c1d93737c85c70944d6593f00e387ac169fd52aba6b28ba80a014e61242380c1ce6b8135841024c71f48a7a7cb6085711555",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/trainer/trainer.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TrainerRoutingModule } from './trainer-routing.module';\nimport { TrainingOverviewComponent } from './training/training-overview/training-overview.component';\nimport { MaterialModule } from '../material/material.module';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { Fit4BitCommonsModule } from '../commons/commons.module';\nimport { PayrollOverviewComponent } from './payroll/payroll-overview/payroll-overview.component';\nimport { NewpayrollComponent } from './payroll/create-payroll/newpayroll.component';\nimport { PayrollListComponent } from './payroll/payroll-overview/payroll-list/payroll-list.component';\nimport { TrainingItemCardComponent } from './training/training-overview/training-item-card/training-item-card.component';\nimport { PayrollItemCardComponent } from './payroll/payroll-overview/payroll-item-card/payroll-item-card.component';\n\n@NgModule({\n  declarations: [\n    TrainingOverviewComponent,\n    PayrollOverviewComponent,\n    NewpayrollComponent,\n    PayrollListComponent,\n    TrainingItemCardComponent,\n    PayrollItemCardComponent,\n  ],\n  imports: [\n    CommonModule,\n    TrainerRoutingModule,\n    MaterialModule,\n    ReactiveFormsModule,\n    Fit4BitCommonsModule,\n  ],\n  exports: [],\n})\nexport class TrainerModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "NewpayrollComponent"
                        },
                        {
                            "name": "PayrollItemCardComponent"
                        },
                        {
                            "name": "PayrollListComponent"
                        },
                        {
                            "name": "PayrollOverviewComponent"
                        },
                        {
                            "name": "TrainingItemCardComponent"
                        },
                        {
                            "name": "TrainingOverviewComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "Fit4BitCommonsModule"
                        },
                        {
                            "name": "MaterialModule"
                        },
                        {
                            "name": "TrainerRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "TrainerRoutingModule",
            "id": "module-TrainerRoutingModule-1279162d6010015abd18808e758497c62f359e89bab05b9bc6a43eda0d0c634168025a523e1cad2e4b4d25e3abae1a174e23db31c439740568a33bd579f30db9",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/trainer/trainer-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PayrollOverviewComponent } from './payroll/payroll-overview/payroll-overview.component';\nimport { TrainingOverviewComponent } from './training/training-overview/training-overview.component';\n\nconst routes: Routes = [\n  {\n    path: 'overview',\n    component: TrainingOverviewComponent,\n  },\n  {\n    path: 'payroll',\n    component: PayrollOverviewComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TrainerRoutingModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/commons/components/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true,\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false,\n  BACKEND_URL: 'http://localhost:8080/api/',\n}"
            },
            {
                "name": "HEADER",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/commons/service/service.constants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{ 'Content-Type': 'application/json' }"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/commons/components/bubble/bubble.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/commons/components/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Button>",
                "defaultValue": "(args: Button) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Header>",
                "defaultValue": "(args: Header) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Page>",
                "defaultValue": "(args: Page) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/commons/components/bubble/bubble.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<BubbleComponent>",
                "defaultValue": "(args: BubbleComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/commons/components/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ButtonComponent>",
                "defaultValue": "(args: ButtonComponent) => ({\n  props: args,\n})"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "Authority",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"ROLE_ADMIN\" | \"ROLE_TRAINER\" | \"ROLE_SUPERIOR\" | \"ROLE_FINANCE\"",
                "file": "src/app/commons/dto/role-dto.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "Authority",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"ROLE_ADMIN\" | \"ROLE_TRAINER\" | \"ROLE_SUPERIOR\" | \"ROLE_FINANCE\"",
                "file": "src/app/commons/models/role.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "BillState",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"OFFEN\" | \"AUSBEZAHLT\" | \"FREIGABE_SUPERIOR\" | \"FREIGABE_FINANCE\" | \"ABGELEHNT\" | \"Warte auf Freigabe\"",
                "file": "src/app/commons/models/bill-state.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "Message",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/commons/models/messagebox.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "REST_PATH",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/commons/service/service.constants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 195
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "src/app/commons/components/button/button.component.stories.ts": [
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/commons/components/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/commons/components/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/commons/components/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ButtonComponent>",
                    "defaultValue": "(args: ButtonComponent) => ({\n  props: args,\n})"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true,\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false,\n  BACKEND_URL: 'http://localhost:8080/api/',\n}"
                }
            ],
            "src/app/commons/service/service.constants.ts": [
                {
                    "name": "HEADER",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/commons/service/service.constants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{ 'Content-Type': 'application/json' }"
                }
            ],
            "src/stories/Button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Button>",
                    "defaultValue": "(args: Button) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Header.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Header>",
                    "defaultValue": "(args: Header) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Page.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Page>",
                    "defaultValue": "(args: Page) => ({\n  props: args,\n})"
                }
            ],
            "src/app/commons/components/bubble/bubble.component.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/commons/components/bubble/bubble.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/commons/components/bubble/bubble.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<BubbleComponent>",
                    "defaultValue": "(args: BubbleComponent) => ({\r\n  props: args,\r\n})"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "src/app/commons/dto/role-dto.model.ts": [
                {
                    "name": "Authority",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"ROLE_ADMIN\" | \"ROLE_TRAINER\" | \"ROLE_SUPERIOR\" | \"ROLE_FINANCE\"",
                    "file": "src/app/commons/dto/role-dto.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "src/app/commons/models/role.model.ts": [
                {
                    "name": "Authority",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"ROLE_ADMIN\" | \"ROLE_TRAINER\" | \"ROLE_SUPERIOR\" | \"ROLE_FINANCE\"",
                    "file": "src/app/commons/models/role.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "src/app/commons/models/bill-state.model.ts": [
                {
                    "name": "BillState",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"OFFEN\" | \"AUSBEZAHLT\" | \"FREIGABE_SUPERIOR\" | \"FREIGABE_FINANCE\" | \"ABGELEHNT\" | \"Warte auf Freigabe\"",
                    "file": "src/app/commons/models/bill-state.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "src/app/commons/models/messagebox.model.ts": [
                {
                    "name": "Message",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/commons/models/messagebox.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                }
            ],
            "src/app/commons/service/service.constants.ts": [
                {
                    "name": "REST_PATH",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/commons/service/service.constants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 195
                }
            ]
        }
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "trainer",
                        "loadChildren": "./trainer/trainer.module#TrainerModule",
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/trainer/trainer-routing.module.ts",
                                        "module": "TrainerRoutingModule",
                                        "children": [
                                            {
                                                "path": "overview",
                                                "component": "TrainingOverviewComponent"
                                            },
                                            {
                                                "path": "payroll",
                                                "component": "PayrollOverviewComponent"
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "TrainerModule"
                            }
                        ]
                    },
                    {
                        "path": "superior",
                        "loadChildren": "./superior/superior.module#SuperiorModule",
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/superior/superior-routing.module.ts",
                                        "module": "SuperiorRoutingModule",
                                        "children": [
                                            {
                                                "path": "newuser",
                                                "component": "NewUserComponent"
                                            },
                                            {
                                                "path": "newtrainingtyp",
                                                "component": "NewTraininTypComponent"
                                            },
                                            {
                                                "path": "newtraining",
                                                "component": "TrainingComponent"
                                            },
                                            {
                                                "path": "room",
                                                "component": "RoomComponent",
                                                "canActivate": [
                                                    "AuthGuardSuperior"
                                                ]
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "SuperiorModule"
                            }
                        ]
                    },
                    {
                        "path": "login",
                        "component": "LoginComponent"
                    },
                    {
                        "path": "welcome",
                        "component": "WelcomePageComponent"
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 1,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/commons/blank-slate-information/blank-slate-information.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BlankSlateInformationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/commons/components/backdrop/backdrop.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BackdropComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/commons/components/base-item-card/base-item-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BaseItemCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/commons/components/bubble/bubble.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/commons/components/bubble/bubble.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/commons/components/bubble/bubble.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BubbleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/commons/components/button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/commons/components/button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/commons/components/button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/commons/components/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/commons/components/checkbox-card/card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CheckboxCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/commons/components/chips/chips.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ChipsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/commons/components/fit4bit-close-button/fit4bit-close-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "Fit4bitCloseButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/commons/components/overlay/overlay.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OverlayComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/commons/components/snack-bar/snack-bar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SnackBarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/commons/dto/dto.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Dto",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/commons/dto/payroll-add-training-dto.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "PayrollAddTrainingDto",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/commons/dto/payroll-dto.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "PayrollDto",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/commons/dto/role-dto.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Roles",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/commons/dto/room-dto.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "RoomDto",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/commons/dto/training-dto.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TrainingDto",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/commons/dto/training-typ-dto.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TrainingTypDto",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/commons/dto/user-dto.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "UserDto",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/commons/dto/userlogin-dto.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "UserLoginDto",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/commons/guards/superior-guard.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "AuthGuardSuperior",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/commons/intercepters/jwt-intercepter.service.ts",
                "type": "interceptor",
                "linktype": "interceptor",
                "name": "JwtIntercepterService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/commons/loader/loader.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/commons/models/jwt-token.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DecodedJwtTokenData",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/commons/models/jwt-token.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "JwtToken",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/commons/models/role.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Roles",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/commons/models/training-typ.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TrainingTyp",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/commons/models/training.modell.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Training",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/commons/models/user.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/commons/pages/image-uploader/image-uploader.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ImageUploaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/commons/pages/login/login.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoginComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/commons/pages/training/training.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TrainingComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/commons/pages/welcome-page/welcome-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "WelcomePageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/commons/service/auth.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AuthService",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/commons/service/base-http.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "BaseHttpService",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/commons/service/jwt.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "LocalStoreService",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/commons/service/loader.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "LoaderService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/commons/service/payroll.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "PayrollService",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/commons/service/room.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "RoomService",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/commons/service/service.constants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "HEADER",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/commons/service/snackbar.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "SnackbarService",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/commons/service/training.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "TrainingService",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/commons/service/user.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "UserService",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/commons/shared/main-content-container/main-content-container.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MainContentContainerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/navigation/menu-content/menu-content.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MenuContentComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/navigation/side-navigation/side-navigation.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SideNavigationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/navigation/top-navigation/top-navigation.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TopNavigationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/superior/pages/new-trainin-typ/new-trainin-typ.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NewTraininTypComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/superior/pages/new-user/new-user.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NewUserComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/superior/pages/room/room.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RoomComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/superior/service/training-typ.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "TrainingTypService",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/trainer/payroll/create-payroll/newpayroll.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NewpayrollComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/trainer/payroll/payroll-overview/card-item.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "CardItemService",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/trainer/payroll/payroll-overview/payroll-item-card/payroll-item-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PayrollItemCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/trainer/payroll/payroll-overview/payroll-list/payroll-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PayrollListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/trainer/payroll/payroll-overview/payroll-overview.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PayrollOverviewComponent",
                "coveragePercent": 0,
                "coverageCount": "0/23",
                "status": "low"
            },
            {
                "filePath": "src/app/trainer/training/training-overview/training-item-card/training-item-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TrainingItemCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/trainer/training/training-overview/training-overview.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TrainingOverviewComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/utils/has-role.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "HasRoleDirective",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/User.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}